Etairia_Sidirou_Beton.java

package part5;

import javax.swing.JOptionPane;

// H κλάση αυτή περιγράφει την εταιρεία σιδήρου-μπετόν
public class Etairia_Sidirou_Beton 
{
    //Δήλωση Μελών κλάσης Etairia_Sidirou_Beton
    private String eponymia;
    private String AFM_Etaireias;
    private String doy;
    private String email;
    private String phone;
    private String address;
    private float tziros;
    
    //Δημιουργός κλάσης Etairia_Sidirou_Beton για αρχικοποίηση των ιδιωτικών μελών της
    Etairia_Sidirou_Beton()
    {
        eponymia="Polisi kai Emporia Sidirou & Domikon Plegmaton";
        AFM_Etaireias="082105296";
        doy="C Patras";
        email="ironcompany@gmail.com";
        phone="2610355553";
        address="Akth dymaion Patras";
        tziros=0;
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Etairia_Sidirou_Beton
    void set_eponymia(String eponymia)
    {
        this.eponymia=eponymia;
    }
    
    void set_AFM_Etaireias(String AFM_Etaireias)
    {
        this.AFM_Etaireias=AFM_Etaireias;
    }
    
    void set_doy(String doy)
    {
        this.doy=doy;
    }
    
    void set_email(String email)
    {
        this.email=email;
    }
    
    void set_phone(String phone)
    {
        this.phone=phone;
    }
    
    void set_address(String address)
    {
        this.address=address;
    }
    
    void set_tziros(float tziros)
    {
        this.tziros=tziros;
    }
    
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Etairia_Sidirou_Beton
    String get_eponymia()
    {
        return eponymia;
    }
    
    String get_AFM_Etaireias()
    {
        return AFM_Etaireias;
    }
    
    String get_doy()
    {
        return doy;
    }
    
    String get_email()
    {
        return email;
    }
    
    String get_phone()
    {
        return phone;
    }
    
    String get_address()
    {
        return address;
    }
    
    float get_tziros()
    {
        return tziros;
    }
    
    //Μέθοδος update_tziros που ενημερώνει το τζίρο της εταιρείας
    void update_tziros(float poso)
    {
        tziros+=poso;
    }
    
    //Μέθοδος print() που εκτυπώνει όλα τα μέλη της κλάσης Etairia_Sidirou_Beton 
    void print()
    {
        String res="EPONYMIA ETAIREIAS: Polisi kai Emporia Sidirou & Domikon Plegmaton\n";
        res+="AFM ETAIREIAS: 082105296\n";
        res+="DOY: C Patras\n";
        res+="EMAIL: ironcompany@gmail.com\n";
        res+="THLEFONO: 2610355553\n";
        res+="DIEYTHYNSH: Akth dymaion Patras\n";
        res+="TZIROS:"+tziros;
        
        JOptionPane.showMessageDialog(null, res,"STOIXEIA ETAIREIAS SIDHROY BETON", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Etairia_Sidirou_Beton 
    //συνενωμένα σε ένα String
    public String toString()
    {
        String res="EPONYMIA ETAIREIAS: Polisi kai Emporia Sidirou & Domikon Plegmaton\n";
        res+="AFM ETAIREIAS: 082105296\n";
        res+="DOY: C Patras\n";
        res+="EMAIL: ironcompany@gmail.com\n";
        res+="THLEFONO: 2610355553\n";
        res+="DIEYTHYNSH: Akth dymaion Patras\n";
        res+="TZIROS:"+tziros;
        
        return res;
    }
}
 

Pelatis.java
package part5;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import javax.swing.JOptionPane;

// H κλάση Pelatis περιγράφει κάθε Πελατη της εταιρείας Σιδήρου-Μπετόν
public class Pelatis implements Serializable
{
    //Δήλωση Μελών κλάσης Pelatis
    protected String onoma;
    protected String eponymo;
    protected String phone;
    protected String city;
    protected float balance;//υπόλοιπο πελάτη
    protected int codep; //Κωδικός πελάτη
    protected String AFM_Etaireias;//Το πεδίο αυτό είναι το AFM_Etaireias που εμπο-ρε΄θυεται τα είδη
  
    //Δημιουργός κλάσης Pelatis για αρχικοποίηση των μελών της
    Pelatis(int codep,String onoma,String eponymo,String phone,String city,String AFM_Etaireias)
    {
        this.codep=codep;
        this.onoma=onoma;
        this.eponymo=eponymo;
        this.phone=phone;
        this.city=city;
        this.AFM_Etaireias=AFM_Etaireias;
        balance=0; //αρχικοπόιηση υπολοίπου πελάτη
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Pelatis
    void set_codep(int codep)
    {
        this.codep=codep;
    }
    
    void set_onoma(String onoma)
    {
        this.onoma=onoma;
    }
    
    void set_eponymo(String eponymo)
    {
        this.eponymo=eponymo;
    }
   
    void set_phone(String phone)
    {
        this.phone=phone;
    }
    
    void set_city(String city)
    {
        this.city=city;
    }
    
    void set_balance(float balance)
    {
        this.balance=balance;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Pelatis
    int get_codep()
    {
        return codep;
    }
    
    String get_onoma()
    {
        return onoma;
    }
    
    String get_phone()
    {
        return phone;
    }
    
    String get_city()
    {
        return city;
    }
    
    float get_balance()
    {
        return balance;
    }
    
    //Μέθοδος increase_balance που αυξάνει το υπόλοιπο του πελάτη
    void increase_balance(float poso)
    {
        balance+=poso;
    }
    
    //Μέθοδος decrease_balance που μειώνει το υπόλοιπο του πελάτη
    void decrease_balance(float poso)
    {
        balance-=poso;
    }
    
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Pelatis 
    void print()
    {
        String res="KODIKOS PELATH: "+codep+"\n";
        res+="ONOMA PELATH: "+onoma+"\n";
        res+="EPONYMO: "+eponymo+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="POLH:"+city+"\n";;
        res+="YPOLOIPO:"+balance;
       
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Pelatis 
    //συνενωμένα ως ένα String
    public String toString()
    {
        String res="KODIKOS PELATH: "+codep+"\n";
        res+="ONOMA PELATH: "+onoma+"\n";
        res+="EPONYMO: "+eponymo+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="POLH:"+city+"\n";;
        res+="YPOLOIPO:"+balance;
        
        return res;
    }
    
    
    public void storePromitheytis(Promitheytis emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("PromitheytesFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
         
    }
     
    public void displayPromhtheytis()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Promitheytis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PromitheytesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Promitheytis) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
}

 

Pelatis_Xondrikis_Etaireia.java
package part5;


import java.io.Serializable;
import javax.swing.JOptionPane;

// H κλάση αυτή περιγράφει κάθε Πελατη Χονδρικής-Εταιρεία της εταιρείας Σιδήρου-Μπετόν
public class Pelatis_Xondrikis_Etaireia extends Pelatis implements Serializable
{
    //Δήλωση μελών AFM, Eponymia, Ypeythinos της κλάσης Pelatis_Xondrikis_Etaireia. 
    //Τα υπόλοιπα μέκη κληρονομούνται από την υπερκλάση Pelatis
    private String AFM;
    private String eponymia;
    private String ypeythinos;
    
    //Δημιουργός κλάσης Pelatis_Xondrikis_Etaireia για αρχικοποίηση των μελών της
    Pelatis_Xondrikis_Etaireia(int codep,String onoma,String eponymo,String phone,String city,String AFM,String eponymia,String ypeythinos,String AFM_Etaireias)
    {
        super(codep,onoma,eponymo,phone,city,AFM_Etaireias);
        this.AFM=AFM;
        this.eponymia=eponymia;
        this.ypeythinos=ypeythinos;
    }
    
    //Μέθοδοι set που τροποποιούν τα μέλη της κλάσης Pelatis_Xondrikis_Etaireia
    void set_AFM(String AFM)
    {
        this.AFM=AFM;
    }
    
    void set_eponymia(String eponymia)
    {
        this.eponymia=eponymia;
    }
     
    void set_ypeythinos(String ypeythinos)
    {
        this.ypeythinos=ypeythinos;
    }  
    
     
    //Μέθοδοι get που επιστρέφει τα μέλη της κλάσης Pelatis_Xondrikis_Etaireia
    String get_AFM()
    {
        return AFM;
    }
    
    String get_eponymia()
    {
        return eponymia;
    }
    
    String get_ypeythinos()
    {
        return ypeythinos;
    }
     
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Pelatis_Xondrikis_Etaireia 
    void print()
    {
        String res="ONOMA PELATH: "+onoma+"\n";
        res+="EPONYMO: "+eponymo+"\n";
        res+="AFM: "+AFM+"\n";
        res+="EPONYMIA: "+eponymia+"\n";
        res+="YPEYTHINOS: "+ypeythinos+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="POLH:"+city+"\n";;
        res+="YPOLOIPO:"+balance;
        
        JOptionPane.showMessageDialog(null, res,"STOIXEIA PELATH XON-DRIKHS/ETAIREIAS", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Pelatis 
    //συνενωμένα ως ένα String
    public String toString()
    {
        String res="ONOMA PELATH: "+onoma+"\n";
        res+="EPONYMO: "+eponymo+"\n";
        res+="AFM: "+AFM+"\n";
        res+="EPONYMIA: "+eponymia+"\n";
        res+="YPEYTHINOS: "+ypeythinos+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="POLH:"+city+"\n";;
        res+="YPOLOIPO:"+balance;
        
        return res;
    }
}
 

Pelatis_Lianiks_Idiotis.java
package part5;

import java.io.Serializable;
import javax.swing.JOptionPane;

// H κλάση αυτή περιγράφει κάθε Πελατη Λιανικής-Ιδιώτη της εταιρείας Σιδήρου-Μπετόν
public class Pelatis_Lianikis_Idiotis extends Pelatis implements Serializable
{
    //Δήλωση μέλους ADT κλάσης Pelatis_Lianikis_Idiotis. Τα υπόλοιπα μέκη κληρονομού-νται από
    //την κλάση Pelatis
    private String ADT;
     
    //Δημιουργός κλάσης Pelatis_Lianikis_Idiotis για αρχικοποίηση των μελών της
    Pelatis_Lianikis_Idiotis(int codep,String onoma,String eponymo,String phone,String city,String ADT,String AFM_Etaireias)
    {
        super(codep,onoma,eponymo,phone,city,AFM_Etaireias);
        this.ADT=ADT;
    }
    
    //Μέθοδος set που τροποποιεί το ιδιωτικό μέλος ADT της κλάσης Pelatis_Lianikis_Idiotis
    void set_ADT(String ADT)
    {
        this.ADT=ADT;
    }
     
    //Μέθοδος get που επιστρέφει το ιδιωτικό μέλος ADT της κλάσης Pelatis_Lianikis_Idiotis
    String get_ADT()
    {
        return ADT;
    }
   
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Pelatis_Lianikis_Idiotis 
    void print()
    {
        String res="ONOMA PELATH: "+onoma+"\n";
        res+="EPONYMO: "+eponymo+"\n";
        res+="ADT: "+ADT+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="POLH:"+city+"\n";;
        res+="YPOLOIPO:"+balance;
        
       JOptionPane.showMessageDialog(null, res,"STOIXEIA PELATH LIANI-KHS/IDIOTH", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Pelatis 
    //συνενωμένα ως ένα String
    public String toString()
    {
        String res="ONOMA PELATH: "+onoma+"\n";
        res+="EPONYMO: "+eponymo+"\n";
        res+="ADT: "+ADT+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="POLH:"+city+"\n";;
        res+="YPOLOIPO:"+balance;
        
        return res;
    }
}
 

PelatisOperations.java

package part5;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.Scanner;
import javax.swing.JOptionPane;
 
public class PelatisOperations 
{
    public void storePelatis(Pelatis emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("PelatesFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
         
    }
     
    public void displayPelatis()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
    public static void main(String a[])
    {
        String info="1.Πελάτης Χονδρικής 2.Πελάτης Λιανικής\n";
        int res=Integer.parseInt(JOptionPane.showInputDialog(info)); 
        
        menu_pelaton(res);
    }
    
    static void menu_pelaton(int r)
    {  
        PelatisOperations mof = new PelatisOperations();
        Scanner sc=new Scanner(System.in);
        
        do
        {
           String info="Μενού Πελατών\n1.Καταχώριση Πελάτη\n2.Εμφάνιση Πελάτη\n3.Τροποοίηση Πελάτη\n4.Διαγραφή Πελάτη\n5.Τερματισμός Μενού Πελατών\n";
           int res=Integer.parseInt(JOptionPane.showInputDialog(info)); 
           String ans;
           switch (res)
           {
               case 1:      if (r==1) 
                            {   
                                 Pelatis p=new Pela-tis(1,"Nikos","Mathaiou","2610299100","Patra","082105296");
                                 Pelatis px=new Pela-tis_Xondrikis_Etaireia(1,"Nikos","Mathaiou","2610299100","Patra","0999999999","ELPE","Nikolaou","082105296");
                                 px.print();
                                 check_duplicate_AFM("0999999999");
                                
                                 mof.storePelatis(px);
                            }
                            else
                            {
                                Pelatis pl=new Pela-tis_Lianikis_Idiotis(2,"Anna","Bagena","26107779100","Patra","AE123456","082105296");
                                pl.print();
                                check_duplicate_ADT("AE123456");
                   
                                mof.storePelatis(pl);
                            }
                            
                            break;
                        
               case 2:   mof.displayPelatis();
                         break;
                            
               case 3:  if (res==1)
                         {
                            System.out.println("Δώστε νέο ΑΦΜ Πελάτη Χονδρικής");
                            String afm=sc.next();
                            Pelatis px=new Pela-tis_Lianikis_Idiotis(2,"Anna","Bagena","26107779100","Patra",afm,"082105296");
                            mof.storePelatis(px);  //η τροποποιημένη εγγραφή καταχωρείται στο αρχείο
                         }
                         else
                         {
                            System.out.println("Δώστε νέο ΑΔΤ Πελάτη Λιανικής");
                            String adt=sc.next();
                            Pelatis pl=new Pela-tis_Lianikis_Idiotis(2,"Anna","Bagena","26107779100","Patra",adt,"082105296");
                               
                            mof.storePelatis(pl);  //η τροποποιημένη εγγραφή καταχωρείται στο αρχείο
                         }
                        break;

               case 4:  if (res==1)
                        {
                            System.out.println("Δώστε ΑΦΜ Πελάτη χονδρικής για διαγραφή");
                            String afm=sc.next();
                            delete_pelatis(afm);
                        }
                        else
                        {
                            System.out.println("Δώστε ΑΦΔΤ Πελάτη Λιανικής για διαγραφή");
                            String adt=sc.next();
                            delete_pelatis(adt);
                        }
                        break;

               case 5: return;
            }    
        }
        while (1!=0);
    }
    
    static void check_duplicate_AFM(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PelatesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Pelatis_Xondrikis_Etaireia emp = (Pelatis_Xondrikis_Etaireia) objIs.readObject();
            
            do
            {
                if (emp.get_AFM()==a)
                {
                     System.out.println("AFM already exists");
                     a=enter_afm();
                }
            }
            while (emp.get_AFM()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    static String enter_afm()
    {
        Scanner sc=new Scanner(System.in);
        String a=sc.next();
        return a;
    }
    
    static String enter_adt()
    {
        Scanner sc=new Scanner(System.in);
        String a=sc.next();
        return a;
    }
    
    static String enter_rest()
    {
        Scanner sc=new Scanner(System.in);
        String a=sc.next();
        System.out.println("Δώσε όνομα, επωνυμία,  πόλη, τηλέφωνο");
        String on=sc.next();
        String epon=sc.next();
        String cit=sc.next();
        String ph=sc.next();
        
        return a+on+epon+ph;
    }
    
    static void check_duplicate_ADT(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PelatesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Pelatis_Lianikis_Idiotis emp = (Pelatis_Lianikis_Idiotis) objIs.readObject();
            
            do
            {
                if (emp.get_ADT()==a)
                {
                     System.out.println("To ΑΔΤ του νέου Πελάτη Λιανικής υπάρχει ήδη");
                     Scanner sc=new Scanner(System.in);
                     a=sc.next();
                }
            }
            while (emp.get_ADT()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
     static void delete_pelatis(String afm)
     {
         
     }
}
 

Promitheytis.java

package part5;

import javax.swing.JOptionPane;

// H κλάση Promitheytis περιγράφει κάθε Προμηθευτή της εταιρείας Σιδήρου-Μπετόν
public class Promitheytis 
{
    //Δήλωση Μελών κλάσης Promitheytis
    private String AFM;
    private String eponymia;
    private String phone;
    private String edra;
    private String email;
    private float balance;//υπόλοιπο προμηθευτή
    
    //Δημιουργός κλάσης Promitheytis για αρχικοποίηση των ιδιωτικών μελών της
    Promitheytis(String AFM,String eponymia,String edra,String phone,String email,float bal-ance)
    {
        this.AFM=AFM;
        this.eponymia=eponymia;
        this.edra=edra;
        this.phone=phone;
        this.email=email;
        balance=0; //αρχικοπόιηση υπολοίπου προμηθευτή κατά τη δημιουργία του
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Promitheytis
    void set_AFM(String AFM)
    {
        this.AFM=AFM;
    }
    
    void set_eponymia(String eponymia)
    {
        this.eponymia=eponymia;
    }
    
    void set_edra(String edra)
    {
        this.edra=edra;
    }
   
    void set_phone(String phone)
    {
        this.phone=phone;
    }
    
    void set_email(String email)
    {
        this.email=email;
    }
    
    void set_balance(float balance)
    {
        this.balance=balance;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Promitheytis
    String get_AFM()
    {
        return AFM;
    }
    
    String get_eponymia()
    {
        return eponymia;
    }
    
    String get_phone()
    {
        return phone;
    }
    
    String get_edra()
    {
        return edra;
    }
    
    float get_balance()
    {
        return balance;
    }
    
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Promitheytis 
    void print()
    {
        String res="AFM PROMHTHEYTH: "+AFM+"\n";
        res+="EPONYMIA PROMHTHEYTH: "+eponymia+"\n";
        res+="EDRA: "+edra+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="EMAIL:"+email+"\n";;
        res+="YPOLOIPO:"+balance;
        
        JOptionPane.showMessageDialog(null, res,"STOIXEIA PROMITHEYTH", JOption-Pane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Promitheytis 
    //συνενωμένα ως ένα String
    public String toString()
    {
        String res="AFM PROMHTHEYTH: "+AFM+"\n";
        res+="EPONYMIA PROMHTHEYTH: "+eponymia+"\n";
        res+="EDRA: "+edra+"\n";
        res+="THLEFONO: "+phone+"\n";;
        res+="EMAIL:"+email+"\n";;
        res+="YPOLOIPO:"+balance;
        
        return res;
    }
    
    //Λοιπές Μέθοδοι
     //Μέθοδος increase_balance που αυξάνει το υπόλοιπο του Προμηθευτή μετά από 
    //κάθε αγορά από αυτόν
    void increase_balance(float poso)
    {
        balance+=poso;
    }
    
    //Μέθοδος decrease_balance που μειώνει το υπόλοιπο του Προμηθευτή μετά από 
    //κάθε πληρωμή σε αυτόν
    void decrease_balance(float poso)
    {
        balance-=poso;
    }
    
}

 

PromitheytisOperations.java
package part5;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.Scanner;
import javax.swing.JOptionPane;

 
public class PromitheytisOperations 
{
    public void storeObject(Promitheytis emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("PromitheytesFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
         
    }
     
    public void displayObjects()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Promitheytis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PromitheytesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Promitheytis) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
    public static void main(String a[])
    {
        PromitheytisOperations mof = new PromitheytisOperations();
        Scanner sc=new Scanner(System.in);
        
        do
        {
           String info="Μενού Προμηθευτών\n1.Καταχώριση Προμηθευτή\n2.Εμφάνιση Προμηθευτή\n3.Τροποποίηση Προμηθευτή\n4.Διαγραφή Προμηθευτή\n5.Τερματισμός Μενού Πελατών\n";
           int res=Integer.parseInt(JOptionPane.showInputDialog(info)); 
           
           switch (res)
           {
               case 1:  Promitheytis pro=new Promitheytis("022222222","EISAGOGIKH AE","THESSALONIKH","2310456789","EISAG@HOTMAIL.COM",500);
                        check_duplicate_AFM("022222222");
                        mof.storeObject(pro); 
                        break;
                        
               case 2:  mof.displayObjects();
                        break;
                        
               case 3:  System.out.println("Δώστε νέο υπόλοιπο προμηθευτή");
                         float ypoloipo=sc.nextFloat();
                         pro=new Promitheytis("022222222","EISAGOGIKH AE","THESSALONIKH","2310456789","EISAG@HOTMAIL.COM",ypoloipo);//Τροποποιείται το υπόλοιπο του προμηθευτή
                         mof.storeObject(pro);  //η τροποποιημένη εγγραφή καταχωρείται στο αρχείο
                         break;

               case 4: System.out.println("Δώστε ΑΦΜ προμηθευτή για διαγραφή");
                        String afm=sc.next();
                        delete_promitheytis(afm);
                        break;

               case 5: return;
          }    
        }
        while (1!=0);
    }
    
    static void check_duplicate_AFM(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PromitheytesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Promitheytis emp = (Promitheytis) objIs.readObject();
            
            do
            {
                if (emp.get_AFM()==a)
                {
                     System.out.println("To ΑΦΜ του νέου Προμηθευτή υπάρχει ήδη");
                     Scanner sc=new Scanner(System.in);
                     a=sc.next();
                }
            }
            while (emp.get_AFM()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    static void delete_promitheytis(String afm)
    {
        
    }
}
 

Eidos.java
package part5;

import javax.swing.JOptionPane;

// H κλάση Eidos περιγράφει κάθε Είδος της εταιρείας Σιδήρου-Μπετόν
public class Eidos 
{
    //Δήλωση Μελών κλάσης Eidos
    protected int kodikos_eidous;
    protected String proeleysi;
    protected String kataskeyastis;
    protected String monada_metrisis;
    protected float timi_polisis;
    protected int ypoloipo; //Η ποσότητα που εκφράζει το τρέχον υπόλοιπο του είδους
    protected String AFM_Etaireias;//Το πεδίο αυτό είναι το AFM_Etaireias σιδήρου-μπετόν που εμπορεύεται το είδος
    
    //Δημιουργός κλάσης Eidos για αρχικοποίηση των μελών της
    Eidos(int kodikos_eidous,String proeleysi,String kataskeyastis,String mona-da_metrisis,float timi_polisis,String AFM_Etaireias)
    {
        this.kodikos_eidous=kodikos_eidous;
        this.proeleysi=proeleysi;
        this.kataskeyastis=kataskeyastis;
        this.monada_metrisis=monada_metrisis;
        this.timi_polisis=timi_polisis;
        this.AFM_Etaireias=AFM_Etaireias;
        ypoloipo=0;
    }
    
    Eidos()
    {
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Eidos
    void set_kodikos_eidous(int kodikos_eidous)
    {
        this.kodikos_eidous=kodikos_eidous;
    }
    
    void set_proeleysi(String proeleysi)
    {
        this.proeleysi=proeleysi;
    }
   
    void set_kataskeyastis(String kataskeyastis)
    {
        this.kataskeyastis=kataskeyastis;
    }
    
    void set_monada_metrisis(String monada_metrisis)
    {
        this.monada_metrisis=monada_metrisis;
    }
    
    void set_timi_polisis(float timi_polisis)
    {
        this.timi_polisis=timi_polisis;
    }
     
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Eidos
    int get_kodikos_eidous()
    {
        return kodikos_eidous;
    }
    
    String get_kataskeyastis()
    {
        return kataskeyastis;
    }
    
    String get_monada_metrisis()
    {
        return monada_metrisis;
    }
    
    float get_timi_polisis()
    {
        return timi_polisis;
    }
     
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Eidos 
    void print()
    {
        String res="KODIKOS EIDOUS: "+kodikos_eidous+"\n";
        res+="PROELEYSH: "+proeleysi+"\n";
        res+="KATASKEYASTHS: "+kataskeyastis+"\n";
        res+="MONADA METRHSHS: "+monada_metrisis+"\n";
        res+="YPOLOIPO: "+ypoloipo+"\n";
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Eidos συνενωμένα ως ένα String
    public String toString()
    {
        String res="KODIKOS EIDOUS: "+kodikos_eidous+"\n";
        res+="PROELEYSH: "+proeleysi+"\n";
        res+="KATASKEYASTHS: "+kataskeyastis+"\n";
        res+="MONADA METRHSHS: "+monada_metrisis+"\n";
        res+="YPOLOIPO: "+ypoloipo+"\n";
          
        return res;
    }
    
    //Λοιπές Μέθοδοι
     void increase_ypoloipo(int posotita)
    {
        ypoloipo+=posotita; //To υπόλοιπο του είδους αυξάνεται κατά την ποσότητα αγοράς
    }
    
    void decrease_ypoloipo(int posotita)
    {
        ypoloipo-=posotita; //To υπόλοιπο του είδους μειώνεται κατά την ποσότητα πώλησης
    }
    
    //Οι επόμενες μέθοδοι υλοποιούνται στις παραγόμενες κλάσεις. Εδώ κάνουμε μια υποτει-πώδη υλοποίηση ώστε η κλάση Eidos να μην δηλωθεί ως abstract
     float metapoihsh(String type)
     {
         return 0;
     }
     
     float epibarynsh()
     {
         return 0;
     }
     
     float ayxisi_timis_mandya()
     {
         return 0;
     }
}
. 


EidosOperations.java
package part5;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.Scanner;
import javax.swing.JOptionPane;
 
public class EidosOperations 
{
    public void storeObject(Eidos emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("EidiFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
         
    }
     
    public void displayObjects()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Eidos emp=null;
    
        try 
        {
            fileIs = new FileInputStream("EidiFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Eidos) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
    public static void main(String a[])
    {
        EidosOperations mof = new EidosOperations();
        Scanner sc=new Scanner(System.in);
        
        do
        {
           String info="Μενού Ειδών\n1.Καταχώριση Είδους\n2.Εμφάνιση Εί-δους\n3.Τροποοίηση Είδους\n4.Διαγραφή Είδους\n5.Τερματισμός Μενού Πελατών\n";
           int res=Integer.parseInt(JOptionPane.showInputDialog(info)); 
           
           switch (res)
           {
               case 1:   Eidos e=new Eidos(200,"ELLADA","XALYBOYRGIA THESSALI-AS","TEMAXIO",8,"022222222");
                         Domiko_Plegma dom=new Domi-ko_Plegma(200,"ELLADA","XALYBOYRGIA THESSALI-AS","TEMAXIO",8,"KANONIKH","022222222");
            
                         dom.print();
                         check_duplicate_code(200);
                         mof.storeObject(dom);
                         break;
                        
               case 2:   mof.displayObjects();
                         break; 
                         
               case 3:  System.out.println("Δώστε νέα τιμή αγοράς");
                        float timi=sc.nextFloat();
                        e=new Eidos(200,"ELLADA","XALYBOYRGIA THESSALI-AS","TEMAXIO",timi,"022222222");
                        dom=new Domiko_Plegma(200,"ELLADA","XALYBOYRGIA THESSA-LIAS","TEMAXIO",timi,"KANONIKH","022222222");
                        break;
                        
               case 5: return;
            }    
        }
        while (1!=0);
    }
    
    static void check_duplicate_code(int a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("EidiFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Eidos emp = (Eidos) objIs.readObject();
            
            do
            {
                if (emp.get_kodikos_eidous()==a)
                {
                     System.out.println("Ο Κωδικός του νέου Είδους υπάρχει ήδη! Δώστε νέο κωδικό Είδους");
                     Scanner sc=new Scanner(System.in);
                     a=sc.nextInt();
                }
            }
            while (emp.get_kodikos_eidous()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
   
}
 

Domiko_Plegma.java
package part5;

import javax.swing.JOptionPane;

// H κλάση Domiko_Plegma περιγράφει το είδος Δομικό Πλέγμα
public class Domiko_Plegma extends Eidos
{
    //Δήλωση Μελών κλάσης Domiko_Plegma
   
    private float timi_agoras;//To Δομικό Πλέγμα αγοράζεται δεν παράγεται από την εταιρεία σιδήρου-μπετόν
    //και αυτό το πεδίο είναι η τιμή αγοράς του
   
    private String Diastasi;//Υπάρχουν πολλές διαστάσεις για δομικά πλέγματα
  
    private boolean topothetisi;//Το πεδίο αυτό παίρνει τις τιμές true/false ανάλογα με το το δομικο πλέγμα απαιτεί και
    //τοποθέτηση στην οικοδομή για την οποία προορίζεται (τιμή true) ή απλή μεταφορά (τιμή false)
    
    public static int ypoloipo_Domiko_Plegma=0;
  
    //Δημιουργός κλάσης Domiko_Plegma για αρχικοποίηση των μελών της
    Domiko_Plegma(int kodikos_eidous,String proeleysi,String kataskeyastis,String mona-da_metrisis,float timi_agoras,String Diastasi,String AFM_Etaireias)
    {
        //Καλείται ο δημιουργός της υπερκλάσης Eidos για να κατασκευάσει ανώνυμο στιγμιό-τυπο σε αυτή από το οποίο κληρονομείται το τρέχον στιμγιότυπο 
        super(kodikos_eidous, proeleysi,kataskeyastis,monada_metrisis,0,AFM_Etaireias);//To 0 είναι η αρχική τιμή πώλησης
        
        this.timi_agoras=timi_agoras;
        this.Diastasi=Diastasi;
        this.topothetisi=true; //Εξορισμού ένα δομικό πλέγμα απαιτεί και τοποθέτηση στην οι-κοδομή που μεταφέρεται
    }
    
    public Domiko_Plegma()
    {
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Domiko_Plegma
    void set_timi_agoras(float timi_agoras)
    {
        this.timi_agoras=timi_agoras;
    }
    
    void set_Diastasi(String Diastasi)
    {
        this.Diastasi=Diastasi;
    }
    
    void set_topothetisi(boolean topothetisi)
    {
        this.topothetisi=topothetisi;
    }
   
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Domiko_Plegma
    float get_timi_agoras()
    {
        return timi_agoras;
    }
    
    float get_timi_polisis()
    {
        return timi_polisis;
    }
    
    String get_Diastasi()
    {
        return Diastasi;
    }
    
    boolean get_topothesisi()
    {
        return topothetisi;
    }
    
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Domiko_Plegma 
    void print()
    {
        String res="TIMH AGORAS: "+timi_agoras+"\n";
        res+="DIASTASH: "+Diastasi+"\n";
        res+="TOPOTHETHSH PLEGMATOS: "+topothetisi+"\n";
        res+="SYNOLIKH TIMH POLHSHS DOMIKOY PLEGMATOS: "+timi_polisis+"\n";
   
        JOptionPane.showMessageDialog(null, res,"STOIXEIA DOMIKOY PLEGMATOS", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Domiko_Plegma 
    //συνενωμένα ως ένα String
    public String toString()
    {
        String res="TIMH AGORAS: "+timi_agoras+"\n";
        res+="DIASTASH: "+Diastasi+"\n";
        res+="TOPOTHETHSH PLEGMATOS: "+topothetisi+"\n";
        res+="SYNOLIKH TIMH POLHSHS DOMIKOY PLEGMATOS: "+timi_polisis+"\n";
   
        return res;
    }
    
    //Λοιπές Μέθοδοι
    float epibarynsh()//η μέθοδος αυτή αυξάνει την τιμή πώλησης του δομικού πλέγματος α-νάλογα με το αν απαιτείται μόνο μεταφορά και/ή τοποθέτηση του στην οικοδομή
    {
        if (topothetisi==true)
            timi_polisis+=5.5f;//κάθε δομικό πλέγμα αυξάνεται στην τιμή πώλησης του κατά 5.5€ γιατί απαιτείται μεταφορά και τοποθέτηση του στην οικοδομή
        else
            timi_polisis+=2; //κάθε δομικό πλέγμα αυξάνεται στην τιμή πώλησης του κατά 2€ γιατί απαιτείται μόνο μεταφορά του στην οικοδομή
  
        return timi_polisis;
    }
    
}
 

Mandyas.java
package part5;

import javax.swing.JOptionPane;

// H κλάση Mandyas περιγράφει το είδος Μανδύας
public class Mandyas extends Eidos
{
    //Δήλωση Μελών κλάσης Mandyas
    private float mikos;//To μήκος του Μανδύα
   
    private float platos;//To πλάτος του Μανδύα
  
    private float kostos_kataskeyis;//Κόστος κατασκευής μανδύα
  
    private String yliko;//Το πεδίο αυτό περιγράφει το υλικό κατασκευής του μανδύα (ατσάλι, χάλυβας κ.λ.π.)
 
    //Δημιουργός κλάσης Mandyas για αρχικοποίηση των ιδιωτικών μελών της
    Mandyas(int kodikos_eidous,String proeleysi,String kataskeyastis,String mona-da_metrisis,float mikos,float platos,float kostos_kataskeyis,String yliko,String AFM_Etaireias)
    {
        //Καλείται ο δημιουργός της υπερκλάσης Eidos για να κατασκευάσει ανώνυμο στιγμιό-τυπο σε αυτή από το οποίο κληρονομείται το τρέχον στιμγιότυπο 
        super(kodikos_eidous, proeleysi,kataskeyastis,monada_metrisis,0,AFM_Etaireias);//Το 0 είναι η αρχική τιμή πώλησης

        this.mikos=mikos;
        this.platos=platos;
        this.kostos_kataskeyis=kostos_kataskeyis;
        this.yliko=yliko;
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Mandyas
    void set_mikos(float mikos)
    {
        this.mikos=mikos;
    }
    
    void set_platos(float platos)
    {
        this.platos=platos;
    }
    
    void set_kostos_kataskeyis(float kostos_kataskeyis)
    {
        this.kostos_kataskeyis=kostos_kataskeyis;
    }
    
    void set_yliko(String yliko)
    {
        this.yliko=yliko;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Mandyas
    float get_mikos()
    {
        return mikos;
    }
    
    float get_platos()
    {
        return platos;
    }
    
    float get_kostos_kataskeyis()
    {
        return kostos_kataskeyis;
    }
    
    String get_yliko()
    {
        return yliko;
    }
    
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Mandyas 
    void print()
    {
        String res="PLATOS: "+platos+"\n";
        res+="MHKOS: "+mikos+"\n";
        res+="KOSTOS KATASKEYHS: "+kostos_kataskeyis+"\n";
        res+="YLIKO KATASKEYHS MANDYA: "+yliko+"\n";
        res+="SYNOLIKH TIMH POLHSHS MANDYA: "+timi_polisis+"\n";
     
       JOptionPane.showMessageDialog(null, res,"STOIXEIA MANDYA", JOption-Pane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Mandyas συνενωμένα ως ένα String
    public String toString()
    {
        String res="PLATOS MANDYA: "+platos+"\n";
        res+="MHKOS MANDYA: "+mikos+"\n";
        res+="KOSTOS KATASKEYHS: "+kostos_kataskeyis+"\n";
        res+="YLIKO KATASKEYHS MANDYA: "+yliko+"\n";
        res+="SYNOLIKH TIMH POLHSHS MANDYA: "+timi_polisis+"\n";
        
        return res;
    }
    
    //Λοιπές Μέθοδοι
    float ayxisi_timis_mandya()//Η μέθοδος αυτή υπολογίζει την τιμή πώλησης του μανδύα προσθέτοντας τα στοιχεία που τον επιβαρύνουν
    {
        if (yliko.equals("Atsali"))
            timi_polisis+=0.5f; //Αν το υλικό κατασκευής του μανδύα είναι ατσάλι, το κόστος του επιβαρύνεται κατά 0.5€ το τεμάχιο
        else 
            if (yliko.equals("Xalibas"))
                timi_polisis+=0.3f; //Αν το υλικό κατασκευής του μανδύα είναι χάλυβας, το κόστος του επιβαρύνεται κατά 0.3€ το τεμάχιο
            else
                 timi_polisis+=0.2f; //Αν το υλικό κατασκευής του μανδύα είναι οποιοδήποτε άλλο εκτός από ατσάλι και χάλυβα, το κόστος του επιβαρύνεται κατά 0.2€ το τεμάχιο
         
        timi_polisis+=kostos_kataskeyis;//Η τιμή πώλησης του μανδύα επιβαρύνεται με το κό-στος κατασκευής του
   
        return timi_polisis;
    }
}

 

Sidiros_Beton.java
package part5;

import javax.swing.JOptionPane;

//H κλάση Sidiros_Beton περιγράφει το είδος Σϊδηρος-Μπετόν
public class Sidiros_Beton extends Eidos
{
    //Δήλωση Μελών κλάσης Sidiros_Beton
    private float timi_agoras;//Ο σίδηρος-μπετόν αγοράζεται ως Α ύλη και αυτό το πεδίο αντι-προσωπεύει την τιμή αγοράς του
   
    private float pososto_kerdous;//Το πεδίο αυτό αντιπροωπεύει το ποσοστό κέρδους του σι-δήρου σε σχέση με την τιμή αγοράς και πώλησης του
   
    private boolean metapoihsh; //boolen μέλος του τιμές true/false που δείχνει αν ο σίδηρος-μπετόν απαιτεί μεταποίηση ή όχι (δηλ. να κοπεί σε συγκεκριμένο μέγεθος, να γίνει τσέρκι κ.λ.π.)
    
    public static int ypoloipo_Sidiros_Beton=0;
      
    //Δημιουργός κλάσης Sidiros_Beton για αρχικοποίηση των μελών της
    Sidiros_Beton(int kodikos_eidous,String proeleysi,String kataskeyastis,String mona-da_metrisis,float timi_agoras,float pososto_kerdous,String AFM_Etaireias)
    {        
        //Καλείται ο δημιουργός της υπερκλάσης Eidos για να κατασκευάσει ανώνυμο στιγμιό-τυπο σε αυτή από το οποίο κληρονομείται το τρέχον στιμγιότυπο 
        super(kodikos_eidous, proeleysi,kataskeyastis,monada_metrisis,0,AFM_Etaireias);//Το 0 είναι η αρχική τιμή πώλησης
        
        this.timi_agoras=timi_agoras;
        this.pososto_kerdous=pososto_kerdous;
        metapoihsh=false; //η εξορισμού τιμή είναι false που δηλώνει ότι αρχικά ο σίδηρος-μπετόν δεν απαιτεί κάποια μεταποίηση
    }
    
    Sidiros_Beton()
    {
        
    }
    
    //Μέθοδοι set που τροποποιύν τα ιδιωτικά μέλη της κλάσης Sidiros_Beton
    void set_timi_agoras(float timi_agoras)
    {
        this.timi_agoras=timi_agoras;
    }
    
    void set_metapoihsh(boolean metapoihsh)
    {
        this.metapoihsh=metapoihsh;
    }
    
    void set_timi_polisis(float timi_polisis)
    {
        this.timi_polisis=timi_polisis;
    }
   
    void set_pososto_kerdous(float pososto_kerdous)
    {
        this.pososto_kerdous=pososto_kerdous;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Sidiros_Beton
    float get_timi_agoras()
    {
        return timi_agoras;
    }
    
    float get_timi_polisis()
    {
        return timi_polisis;
    }
    
    float get_pososto_kerdous()
    {
        return pososto_kerdous;
    }
    
    boolean gets_metapoihsh()
    {
        return metapoihsh;
    }
    
    //Μέθοδος print() που εκτυπώνει τα μέλη της κλάσης Sidiros_Beton 
    void print()
    {
        String res="TIMH AGORAS: "+timi_agoras+"\n";
        res+="TIMH POLHSHS: "+timi_polisis+"\n";
        res+="TZIROS SIDHROY: "+pososto_kerdous+"\n";
        res+="APAITEI METAPOIHSH: "+metapoihsh+"\n";
        res+="SYNOLIKH TIMH POLHSHS SIDHROY-BETON: "+timi_polisis+"\n";
   
        JOptionPane.showMessageDialog(null, res,"STOIXEIA SIDHROU-BETON", JOp-tionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει τα μέλη της κλάσης Sidiros_Beton 
    //συνενωμένα ως ένα String
    public String toString()
    {
        String res="TIMH AGORAS: "+timi_agoras+"\n";
        res+="TIMH POLHSHS: "+timi_polisis+"\n";
        res+="TZIROS SIDHROY: "+pososto_kerdous+"\n";
        res+="APAITEI METAPOIHSH: "+metapoihsh+"\n";
        res+="SYNOLIKH TIMH POLHSHS SIDHROY-BETON: "+timi_polisis+"\n";
    
        return res;
    }
    
    //Λοιπές Μέθοδοι
    float metapoihsh(String type)//ανάλογα με τη μεταποίηση που χρειάζεται ο σίδηρος αλλά-ζει η τιμή πώλησης του
    {
        if (type.equals("tserki"))
            timi_polisis+=1.5f;//κάθε κιλό σιδήρου-μπετόν αυξάνεται στην τιμή πώλησης του κα-τά 1.5€ γιατί απαιτείται κάθε βέργα να γίνει τσέρκι
        else
            if (type.equals("kopi"))
                timi_polisis+=2;//κάθε κιλό σιδήρου-μπετόν αυξάνεται στην τιμή πώλησης του κα-τά 2€ γιατί απαιτείται κοπή κάθε βέργας
            else
                 if (type.equals("gyrisma"))
                     timi_polisis+=5; //κάθε κιλό σιδήρου-μπετόν αυξάνεται στην τιμή πώλησης του κατά 5€ γιατί απαιτείται γύρισμα των άκρων κάθε βέργας
   
        return timi_polisis;
    }
   
}
 
Paraggelia.java
package part5;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

public class Paraggelia 
{
    private Date imer_para;
    private float axia_parag;
    private ArrayList <Eidos> eidh=new ArrayList <Eidos> ();
    private int pos_parag=0;
    
    Paraggelia()
    {
        imer_para=new Date();
        axia_parag=0;
        pos_parag=0;
    }
    
    void addEidos(int type)
    {
        Scanner sc=new Scanner(System.in);
        
        if (type==1)
        {
            System.out.println("Θα παραγγείλετε σίδηρο");
            System.out.println("Δώσε ποσότητα και αξία παραγγελίας σιδήρου");
            pos_parag=sc.nextInt();
            axia_parag=sc.nextFloat();
            Sidiros_Beton sid=new Sidiros_Beton(400,"ELLADA","XALYBOYRGIA ATHI-NAS","TONOS",20,10f,"022222222");
            eidh.add(sid);
        }
        
        if (type==2)
        {
            System.out.println("Θα παραγγείλετε Δομικό Πλέγμα");
            System.out.println("Δώσε ποσότητα και αξία παραγγελίας δομικού πλέγματος");
            pos_parag=sc.nextInt();
            axia_parag=sc.nextFloat();
            Domiko_Plegma dom=new Domiko_Plegma(200,"ELLADA","XALYBOYRGIA THESSALIAS","TEMAXIO",8,"KANONIKH","022222222");
            eidh.add(dom);
        }
    }
    
    
}
 
Menu.java
package part5;

import javax.swing.JOptionPane;


public class Menu
{
    String info;
    int res;
    
    Menu()
    {
        String info="Μενού Πρόγράμματος\n1.Μενού Πελατών\n2.Μενού Προμηθευτών\n3.Μενού Ειδών\nΤερματισμός Προγράμματος\n";
        int res=Integer.parseInt(JOptionPane.showInputDialog(info));
        
        switch(res)
        {
            case 1:   info="Μενού Πρόγράμματος\n1.Μενού Πελατών\n2.Μενού Προμηθευτών\n3.Μενού Ειδών\nΤερματισμός Προγράμματος\n";
                      res=Integer.parseInt(JOptionPane.showInputDialog(info));
        }
    }
            
}

 

Parastatiko_Xondrikis_Polisis.java
package part5;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

public class Parastatiko_Xondrikis_Polisis 
{
    //δήλωση ιδιωτικών μελών κλάσης Parastatiko_Xondrikis_Polisis
    private int ar_timologiou;
    private Date imer_ekdosis;
    private float synoliki_axia;
    private float kathari_axia;
    private float pososto_fpa; //το πεδίο αυτό είναι το ποσοστό pososto_fpa
    private String tropos_apostolis;
    private String AFM; //Δήλωση μέλους AFM που αντιπροσωπεύει τον πελάτη χονδρικής στον οποίο εκδίδεται το παρασταστικό χονδρικής (τιμολόγιο)
    private ArrayList<Eidos> eidi_timologiou=new ArrayList<Eidos> (); //δήλωση μέλους eidi_timologiou που αντιπροσωπεύει ένα δυναμικό πίνακα (ArrayList) με όλα τα είδη που περιλαμβάνει το τιμολόγιο πώλησης
    private ArrayList <Integer> posotita_eidous_timologiou=new ArrayList<Integer> (); //δήλωση μέλους posotita_eidous_timologiouπου αντιπροσωπεύει ένα δυναμικό πίνακα (Ar-rayList) με την ποσότητα κάθε είδους που περιλαμβάνει το τιμολόγιο πώλησης
    
    private static int xondrikes=0;//στατικός μετρητής χονδρικών πωλήσεων
    private static float axiaxondrikes=0;//στατικός αθροιστής αξίας χονδρικών πωλήσεων
    
    //Δημιουργός κλάσης Parastatiko_Xondrikis_Polisis για αρχικοποίηση των ιδιωτικών με-λών της
    Parastatiko_Xondrikis_Polisis(int ar_timologiou,String AFM,Date imer_ekdosis,float pososto_fpa,String tropos_apostolis)
    {
       this.ar_timologiou=ar_timologiou;
       this.AFM=AFM;
       this.imer_ekdosis=imer_ekdosis;
       this.kathari_axia=0;//αρχικά το τιμολόγιο πώλησης έχει καθαρή αξία μηδέν
       this.synoliki_axia=0;//αρχικά το τιμολόγιο πώλησης έχει συνολική αξία μηδέν
       this.tropos_apostolis=tropos_apostolis;
       xondrikes++;//σε κάθε νέα πώληση χονδρικής δηλ.σε κάθε καταχώριση ενός παραστατι-κού χονδρικής πώλησης ο μετρητής αυξάνεται κατά ένα
    }
   
    //Μέθδοι set που τροποποιούν τα ιδιωτικά μέλη της κλάσης Parastatiko_Xondrikis_Polisis
    void set_ar_timologiou(int ar_timologiou)
    {
        this.ar_timologiou=ar_timologiou;
    }

    void set_AFM(String AFM)
    {
        this.AFM=AFM;
    }

    void set_imer_ekdosis(Date imer_ekdosis)
    {
         this.imer_ekdosis=imer_ekdosis;
    }
   
    void set_tropos_apostolis(String tropos_apostolis)
    {
        this.tropos_apostolis=tropos_apostolis;
    }
    
    void set_pososto_fpa(float pososto_fpa)
    {
        this.pososto_fpa=pososto_fpa;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Para-statiko_Xondrikis_Polisis 
    int get_ar_timologiou()
    {
        return this.ar_timologiou;
    }
    
    Date get_imer_ekdosis()
    {
        return this.imer_ekdosis;//Με το this αναφερόμαστε στα μέλη της κλάσης
    }
    
    float get_kathari_axia()
    {
        return this.kathari_axia;
    }
    
    String get_AFM()
    {
        return AFM;
    }
     
    float get_synoliki_axia()
    {
        return this.synoliki_axia;
    }
    
    float get_pososto_fpa()
    {
        return this.pososto_fpa;
    }
    
    String get_tropos_apostolis()
    {
        return this.tropos_apostolis;
    }
    
    ArrayList <Eidos> get_eidi_timologiou()//H μέθοδος αυτή επιστρέφει όλο το ArrayList με τα είδη που περιλαμβάνει το τιμολόγιο πώλησης
    {
        return eidi_timologiou;
    }
    
    static int get_xondrikes()//Η static μέθοδος get_xondrikes() επιστρέφει το πλήθος των χονδρικών πωλήσεων
    {
        return xondrikes;
    }
    
     //Μέθοδος print() που εκτυπώνει όλα τα μέλη της κλάσης Parastatiko_Xondrikis_Polisis 
    void print()
    {
        String res="ARITHMOS TIMOLOGIOU:"+this.ar_timologiou+"\n";
        res+="AFM PELATH: "+this.AFM+"\n";
        res+="HMEROMHNIA EKDOSHS: "+this.imer_ekdosis+"\n";
        res+="FPA: "+this.pososto_fpa+"\n";
        res+="KATHARH AXIA:"+this.kathari_axia+"\n";;
        res+="SYNOLIKH AXIA: "+this.synoliki_axia+"\n";
        res+="TROPOS APOSTOLHS: "+this.tropos_apostolis+"\n";
        
        for (int i=0;i<eidi_timologiou.size();i++)
            res+=eidi_timologiou.get(i).toString()+"\n"; //H μέθοδος αυτή προσθέτει σε κάθε ε-πανάληψη ένα είδος του Arraylist στη μεταβλητή res
     
        JOptionPane.showMessageDialog(null, res,"STOIXEIA TIMOLOGIOU XON-DRIKHS", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Para-statiko_Xondrikis_Polisis  
    //συνενωμένα σε ένα String
    public String toString()
    {
        String res="ARITHMOS TIMOLOGIOU:"+this.ar_timologiou+"\n";
        res+="AFM PELATH: "+this.AFM+"\n";
        res+="HMEROMHNIA EKDOSHS: "+this.imer_ekdosis+"\n";
        res+="POSOSTO FPA: "+this.pososto_fpa+"\n";
        res+="KATHARH AXIA:"+this.kathari_axia+"\n";;
        res+="SYNOLIKH AXIA: "+this.synoliki_axia+"\n";
        res+="TROPOS APOSTOLHS: "+this.tropos_apostolis+"\n";
        
        for (int i=0;i<eidi_timologiou.size();i++)
            res+=eidi_timologiou.get(i).toString()+"\n"; //H μέθοδος αυτή προσθέτει σε κάθε ε-πανάληψη ένα είδος του Arraylist στη μεταβλητή res
     
        return res;
    }
    
    //Λοιπές Μέθοδοι Κλάσης
    void add_eidos(Eidos e,Integer pos)//H μέθοδος αυτή προσθέτει ένα νέο είδος στο τιμο-λόγιο πώλησης μαζί με την ποσότητα του
    {
        eidi_timologiou.add(e);//To νέο είδος προστίθεται στο ArrayList με τα είδη του τιμολο-γίου
        posotita_eidous_timologiou.add(pos.intValue());;//Η αντίστοιχη ποσόστητα πώλησης του είδους προστίθεται στο ArrayList με τις ποσότητες ειδών πώλησης του τιμολογίου
    }
    
    void add_eidh_posotites(ArrayList<Eidos> eidh,ArrayList <Integer> pos)//H μέθοδος αυτή λαμβάνει 2 ArrayList με τα είδη και τις ποσότητες τους και τα καταχωρεί στα αντίστοι-χα μέλη
    {
        eidi_timologiou=eidh;
        posotita_eidous_timologiou=pos;
    }
    
    void ypologismos_axion_timologiou()//Η μέθοδος αυτή υπολογίζει την καθαρή και τη συ-νολική αξία του τιμολογίου
    {
         for (int i=0;i<eidi_timologiou.size();i++)
         {
              kathari_axia+=eidi_timologiou.get(i).timi_polisis*posotita_eidous_timologiou.get(i).intValue();//πολλαπλασιάζουμε την τιμή πώλησης κάθε είδους με την αντίστοιχη ποσότητα του
            
              //Ελέγχεται ο τύπος του είδους και προστίθεται η αντίστοιχη επιβάρυνση 
              
              if (eidi_timologiou.get(i) instanceof Sidiros_Beton)
                   kathari_axia+=eidi_timologiou.get(i).metapoihsh("tserki");
              
              if (eidi_timologiou.get(i) instanceof Mandyas)
                   kathari_axia+=eidi_timologiou.get(i).ayxisi_timis_mandya();
              
              if (eidi_timologiou.get(i) instanceof Domiko_Plegma)
                   kathari_axia+=eidi_timologiou.get(i).epibarynsh();
              
              //H ποσότητα του είδους μειώνεται κατά την ποσότητα πώλησης
              ei-di_timologiou.get(i).decrease_ypoloipo(posotita_eidous_timologiou.get(i).intValue());
         }
         
         synoliki_axia+=kathari_axia*pososto_fpa;//Η συνολική αξία του τιμολογίου επιβαρύ-νεται με την αξία ΦΠΑ
        
         axiaxondrikes+= synoliki_axia;//αθροίζεται στο στατικό αθροιστή axiaxondrikes η συ-νολική αξία του παραστατικού χονδρικής
    }
    
    static float get_axiaxondrikes()
    {
        return axiaxondrikes;
    }
}
 

Parastatiko_Lianikis_Polisis.java

package part5;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

public class Parastatiko_Lianikis_Polisis 
{
    //δήλωση ιδιωτικών μελών κλάσης Parastatiko_Lianikis_Polisis
    private int ar_apodixis;
    private Date imer_ekdosis;
    private float synoliki_axia;
    private String ADT; //Δήλωση μέλους ADT που αντιπροσωπεύει τον πελάτη Λιανι-κής/Ιδιώτη στον οποίο εκδίδεται το παρασταστικό λιανικής πώλησης (απόδειξη λιανικής πώ-λησης) 
  
    private ArrayList<Eidos> eidi_apodixis=new ArrayList<Eidos> (); //dήλωση μέλους eidi_timologiou που αντιπροσωπεύει ένα δυναμικό πίνακα (ArrayList) με όλα τα είδη που περιλαμβάνει η απόδειξη λιανικής πώλησης
    private ArrayList <Integer> posotita_eidous_apodixis=new ArrayList<Integer> (); //δήλωση μέλους posotita_eidous_apodixis που αντιπροσωπεύει ένα δυναμικό πίνακα (Ar-rayList) με την ποσότητα κάθε είδους που περιλαμβάνει η απόδειξη λιανικής πώλησης
   
    private static int lianikes=0;//στατικός μετρητής λιανικών πωλήσεων
    private static float axialianikes=0;//στατικός αθροιστής αξίας λιανικών πωλήσεων
    
    //Δημιουργός κλάσης Parastatiko_Lianikis_Polisis για αρχικοποίηση των ιδιωτικών μελών της
   Parastatiko_Lianikis_Polisis(int ar_apodixis,String ADT,Date imer_ekdosis,float syn-oliki_axia)
   {
       this.ar_apodixis=ar_apodixis;
       this.ADT=ADT;
       this.imer_ekdosis=imer_ekdosis;
       this.synoliki_axia=synoliki_axia;
       lianikes++;//σε κάθε νέα πώληση λιανικής δηλ.σε κάθε καταχώριση ενός παραστατικού λιανικής πώλησης ο μετρητής αυξάνεται κατά ένα
   }
   
   //Μέθδοι set που τροποποιούν τα ιδιωτικά μέλη της κλάσης Parastatiko_Lianikis_Polisis
   void set_ar_apodixis(int ar_apodixis)
   {
       this.ar_apodixis=ar_apodixis;
   }
   
   void set_ADT(String ADT)
   {
       this.ADT=ADT;
   }
   
   void set_imer_ekdosis(Date imer_ekdosis)
   {
        this.imer_ekdosis=imer_ekdosis;
   }
    
    void set_synoliki_axia(float synoliki_axia)
    {
        this.synoliki_axia=synoliki_axia;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Parastatiko_Lianikis_Polisis 
    int get_apodixis()
    {
        return this.ar_apodixis;
    }
    
    Date get_imer_ekdosis()
    {
        return this.imer_ekdosis;//Με το this αναφερόμαστε στα μέλη της κλάσης
    }
    
    String get_ADT()
    {
        return ADT;
    }
     
    float get_synoliki_axia()
    {
        return this.synoliki_axia;
    }
    
    ArrayList <Eidos> get_eidi_apodixis()//H μέθοδος αυτή επιστρέφει όλο το ArrayList με τα είδη που περιλαμβάνει η απόδειξη λιανικής πώλησης
    {
        return eidi_apodixis;
    }
    
    static int get_lianikes()//Η static μέθοδος get_lianikes() επιστρέφει το πλήθος των λιανι-κών πωλήσεων
    {
        return lianikes;
    }
    
    //Μέθοδος print() που εκτυπώνει όλα τα μέλη της κλάσης Parastatiko_Lianikis_Polisis 
    void print()
    {
        String res="ARITHMOS APODEIXHS:"+this.ar_apodixis+"\n";
        res+="ADT PELATH: "+this.ADT+"\n";
        res+="HMEROMHNIA EKDOSHS: "+this.imer_ekdosis+"\n";
        res+="SYNOLIKH AXIA: "+this.synoliki_axia+"\n";
      
        for (int i=0;i<eidi_apodixis.size();i++)
            res+=eidi_apodixis.get(i).toString()+"\n"; //H μέθοδος αυτή προσθέτει σε κάθε επα-νάληψη ένα είδος του Arraylist στη μεταβλητή res
    
        JOptionPane.showMessageDialog(null, res,"STOIXEIA APOXEIXHS LIANIKHS", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Parastatiko_Lianikis_Polisis  
    //συνενωμένα σε ένα String
    public String toString()
    {
        String res="ARITHMOS APODEIXHS:"+this.ar_apodixis+"\n";
        res+="ADT PELATH: "+this.ADT+"\n";
        res+="HMEROMHNIA EKDOSHS: "+this.imer_ekdosis+"\n";
        res+="SYNOLIKH AXIA: "+this.synoliki_axia+"\n";
        
        for (int i=0;i<eidi_apodixis.size();i++)
            res+=eidi_apodixis.get(i).toString()+"\n"; //H μέθοδος αυτή προσθέτει σε κάθε επα-νάληψη ένα είδος του Arraylist στη μεταβλητή res
    
        return res;
    }
    
    //Λοιπές Μέθοδοι Κλάσης
    void add_eidos(Eidos e,Integer pos)//H μέθοδος αυτή προσθέτει ένα νέο είδος στην από-δειξη λιανικής πώλησης μαζί με την ποσότητα του
    {
        eidi_apodixis.add(e);//To νέο είδος προστίθεται στο ArrayList με τα είδη της απόδειξης λιανικής πώλησης
        posotita_eidous_apodixis.add(pos.intValue());;//Η αντίστοιχη ποσόστητα πώλησης του είδους προστίθεται στο ArrayList με τις ποσότητες ειδών πώλησης της απόδειξης λιανικής πώλησης
    }
    
    void add_eidh_posotites(ArrayList<Eidos> eidh,ArrayList <Integer> pos)//H μέθοδος αυτή λαμβάνει 2 ArrayList με τα είδη και τις ποσότητες τους και τα καταχωρεί στα αντίστοι-χα μέλη
    {
        eidi_apodixis=eidh;
        posotita_eidous_apodixis=pos;
    }
    
    void ypologismos_axias_apodixis()//Η μέθοδος αυτή υπολογίζει την καθαρή και τη συνο-λική αξία της απόδειξης λιανικής πώλησης
    {
         for (int i=0;i<eidi_apodixis.size();i++)
         {
             syn-oliki_axia+=eidi_apodixis.get(i).timi_polisis*posotita_eidous_apodixis.get(i).intValue();//πολλαπλασιάζουμε την τιμή πώλησης κάθε είδους με την αντίστοιχη ποσότητα του
            
              //Ελέγχεται ο τύπος του είδους και προστίθεται η αντίστοιχη επιβάρυνση 
              
              if (eidi_apodixis.get(i) instanceof Sidiros_Beton)
                   synoliki_axia+=eidi_apodixis.get(i).metapoihsh("tserki");
              
              if (eidi_apodixis.get(i) instanceof Mandyas)
                   synoliki_axia+=eidi_apodixis.get(i).ayxisi_timis_mandya();
              
              if (eidi_apodixis.get(i) instanceof Domiko_Plegma)
                   synoliki_axia+=eidi_apodixis.get(i).epibarynsh();
              
              //H ποσότητα του είδους μειώνεται κατά την ποσότητα πώλησης
              eidi_apodixis.get(i).decrease_ypoloipo(posotita_eidous_apodixis.get(i).intValue());
         }
         
         axialianikes+=synoliki_axia; //αθροίζεται στο στατικό αθροιστή axialianikes η συνολική αξία του παραστατικού λιανικής
    }
    
    static float get_axialianikes()
    {
        return axialianikes;
    }
}
 

Parastatiko_agoras.java
package part5;

import java.util.Date;
import java.util.*;
import javax.swing.JOptionPane;

public class Parastatiko_Agoras 
{
    //δήλωση ιδιωτικών μελών κλάσης Parastatiko_Agoras
    private int ar_da_timologiou;
    private Date imer_ekdosis;
    private float synoliki_axia;
    private float kathari_axia;
    private float pososto_fpa;
    private String tropos_paralavis;
    private String AFM; //Δήλωση μέλους AFM που αντιπροσωπεύει τον προμηθευτή από τον οποίο εκδίδεται το παρασταστικό αγοράς (ΔΑ-Τιμολόγιο)
    private static int agores=0; //Δήλωση στατικού μέλους agores που υπολογίζει το πλήθος των αγορών
    private static float axiaagores=0;//στατικός αθροιστής αξίας αγορών
    
    private ArrayList<Eidos> eidi_agoras=new ArrayList<Eidos> (); //Δήλωση μέλους ei-di_agoras που αντιπροσωπεύει ένα δυναμικό πίνακα (ArrayList) με όλα τα είδη που περι-λαμβάνει το τιμολόγιο αγοράς
    private ArrayList <Integer> posotita_eidous_agoras=new ArrayList<Integer> (); //δήλωση μέλους posotita_eidous_apodixis που αντιπροσωπεύει ένα δυναμικό πίνακα (Ar-rayList) με την ποσότητα κάθε είδους που περιλαμβάνει το τιμολόγιο αγοράς
 
    //Δημιουργός κλάσης Parastatiko_Agoras για αρχικοποίηση των ιδιωτικών μελών της
    Parastatiko_Agoras(int ar_da_timologiou,String AFM,Date imer_ekdosis,float pososto_fpa,String tropos_paralavis)
    {
        this.ar_da_timologiou=ar_da_timologiou;
        this.AFM=AFM;
        this.imer_ekdosis=imer_ekdosis;
        this.kathari_axia=0; //H αρχική καθαρή αξία του τιμολογίου αγοράς είναι μηδέν
        this.synoliki_axia=0;//H αρχική συνολική αξία του τιμολογίου αγοράς είναι μηδέν
        this.pososto_fpa=pososto_fpa;
        this.tropos_paralavis=tropos_paralavis;
        agores++; //σε κάθε νέα αγορά δηλ.σε κάθε καταχώριση ενός παραστατικού αγοράς ο μετρητής αυξάνεται κατά ένα
    }
   
   //Μέθδοι set που τροποποιούν τα ιδιωτικά μέλη της κλάσης Parastatiko_Agoras
   void set_ar_da_timologiou(int ar_da_timologiou)
   {
       this.ar_da_timologiou=ar_da_timologiou;
   }
   
   void set_AFM(String AFM)
   {
       this.AFM=AFM;
   }
   
   void set_imer_ekdosis(Date imer_ekdosis)
   {
        this.imer_ekdosis=imer_ekdosis;
   }
    
    void set_tropos_paralavis(String tropos_paralavis)
    {
        this.tropos_paralavis=tropos_paralavis;
    }
    
    void set_pososto_fpa(float pososto_fpa)
    {
        this.pososto_fpa=pososto_fpa;
    }
    
    //Μέθοδοι get που επιστρέφουν τα ιδιωτικά μέλη της κλάσης Parastatiko_Agoras 
    int get_ar_da_timologiou()
    {
        return this.ar_da_timologiou;
    }
    
    Date get_imer_ekdosis()
    {
        return this.imer_ekdosis;//Με το this αναφερόμαστε στα μέλη της κλάσης
    }
    
   
    float get_kathari_axia()
    {
        return this.kathari_axia;
    }
    
    String get_AFM()
    {
        return AFM;
    }
     
    float get_synoliki_axia()
    {
        return this.synoliki_axia;
    }
    
    float get_pososto_fpa()
    {
        return this.pososto_fpa;
    }
    
    String get_tropos_paralavis()
    {
        return this.tropos_paralavis;
    }
    
    ArrayList <Eidos> get_eidi_agoras()//H μέθοδος αυτή επιστρέφει όλο το ArrayList με τα είδη που περιλαμβάνει το παραστατικό αγοράς
    {
        return eidi_agoras;
    }
    
    static int get_agores()//Η static μέθοδος get_agores() επιστρέφει το πλήθος των αγορών
    {
        return agores;
    }
    
     //Μέθοδος print() που εκτυπώνει όλα τα μέλη της κλάσης Parastatiko_Agoras 
    void print()
    {
        String res="ARITHMOS TIMOLOGIOU:"+this.ar_da_timologiou+"\n";
        res+="AFM PROMHTHEYTH: "+this.AFM+"\n";
        res+="HMEROMHNIA EKDOSHS: "+this.imer_ekdosis+"\n";
        res+="POSOSTO FPA: "+this.pososto_fpa+"\n";
        res+="KATHARH AXIA:"+this.kathari_axia+"\n";;
        res+="SYNOLIKH AXIA: "+this.synoliki_axia+"\n";
        res+="TROPOS PARALABHS: "+this.tropos_paralavis+"\n";
        
        for (int i=0;i<eidi_agoras.size();i++)
            res+=eidi_agoras.get(i).toString()+"\n"; //H μέθοδος αυτή προσθέτει σε κάθε επανά-ληψη ένα είδος του Arraylist στη μεταβλητή res
      
        JOptionPane.showMessageDialog(null, res,"STOIXEIA TIMOLOGIOU AGORAS", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Parastatiko_Agoras  
    //συνενωμένα σε ένα String
    public String toString()
    {
       String res="ARITHMOS TIMOLOGIOU:"+this.ar_da_timologiou+"\n";
        res+="AFM PROMHTHEYTH: "+this.AFM+"\n";
        res+="HMEROMHNIA EKDOSHS: "+this.imer_ekdosis+"\n";
        res+="POSOSTO FPA: "+this.pososto_fpa+"\n";
        res+="KATHARH AXIA:"+this.kathari_axia+"\n";;
        res+="SYNOLIKH AXIA: "+this.synoliki_axia+"\n";
        res+="TROPOS PARALABHS: "+this.tropos_paralavis+"\n";
        
        for (int i=0;i<eidi_agoras.size();i++)
            res+=eidi_agoras.get(i).toString()+"\n"; //H μέθοδος αυτή προσθέτει σε κάθε επανά-ληψη ένα είδος του Arraylist στη μεταβλητή res
      
        return res;
    }
    
    //Λοιπές Μέθοδοι Κλάσης
    void add_eidos(Eidos e,Integer pos)//H μέθοδος αυτή προσθέτει ένα νέο είδος στο τιμο-λόγιο αγοράς μαζί με την ποσότητα του
    {
        eidi_agoras.add(e);//To νέο είδος προστίθεται στο ArrayList με τα είδη του τιμολογίου
        posotita_eidous_agoras.add(pos.intValue());//Η αντίστοιχη ποσόστητα πώλησης του είδους προστίθεται στο ArrayList με τις ποσότητες ειδών πώλησης του τιμολογίου
    }
    
    void add_eidh_posotites(ArrayList<Eidos> eidh,ArrayList <Integer> pos)//H μέθοδος αυτή λαμβάνει 2 ArrayList με τα είδη και τις ποσότητες τους και τα καταχωρεί στα αντίστοιχα μέλη
    {
        eidi_agoras=eidh;
        posotita_eidous_agoras=pos;
    }
    
    void ypologismos_axias_timologiou()//Η μέθοδος αυτή υπολογίζει την καθαρή και τη συ-νολική αξία του τιμολογίου αγοράς
    {
         for (int i=0;i<eidi_agoras.size();i++)
         {
              kathari_axia+=eidi_agoras.get(i).timi_polisis*posotita_eidous_agoras.get(i).intValue();//πολλαπλασιάζουμε την τιμή πώλησης κάθε είδους με την αντίστοιχη ποσότητα του
            
              //H ποσότητα του είδους αυξάνεται κατά την ποσότητα αγοράς
              eidi_agoras.get(i).increase_ypoloipo(posotita_eidous_agoras.get(i).intValue());
         }
         
         synoliki_axia+=kathari_axia*pososto_fpa;//Η συνολική αξία του τιμολογίου επιβαρύ-νεται με την αξία ΦΠΑ
         
          axiaagores+=synoliki_axia; 
    }
    
    static float get_axiaagores()
    {
        return axiaagores;
    }
}
 

Eispraxi_apo_Pelati.java
package part5;
import java.util.Date;
import javax.swing.JOptionPane;

//H Κλάση αυτή περιγράφει μια είσπραξη από πελάτη (είτε χονδρικής είτε λιανικής)
public class Eispraxi_apo_Pelati 
{
    //δήλωση ιδιωτικών μελών κλάσης Eispraxi_apo_Pelati
    private int arithmos_apodixis;
    private float poso_pliromis;
    private Date hmerominia_pliromis=new Date();
    private String tropos_pliromis;
    private int codep; //Κωδικός Πελάτη που κάνει την πληρωμή
    
     //Δημιουργός κλάσης Eispraxi_apo_Pelati για αρχικοποίηση των ιδιωτικών μελών της
    Eispraxi_apo_Pelati(int arithmos_apodixis,float poso_pliromis,Date hmeromin-ia_pliromis,String tropos_pliromis,int codep)
    {
        this.arithmos_apodixis=arithmos_apodixis;
        this.poso_pliromis=poso_pliromis;
        this.hmerominia_pliromis=hmerominia_pliromis;
        this.tropos_pliromis=tropos_pliromis;
        this.codep=codep;
    }
    
    void set_codep(int codep)//Μέθδος που τροποποιεί τον κωδικό πελάτη που κάνει την πληρωμή
    {
        this.codep=codep;
    }
    
    void set_arithmos_apodixis(int arithmos_apodixis)
    {
         this.arithmos_apodixis=arithmos_apodixis;
    }
    
    void set_poso_pliromis(float poso_pliromis)
    {
         this.poso_pliromis=poso_pliromis;
    }
    
    void set_hmerominia_pliromis(Date hmerominia_pliromis)
    {
         this.hmerominia_pliromis=hmerominia_pliromis;
    }
     
    void set_tropos_pliromis(String tropos_pliromis)
    {
         this.tropos_pliromis=tropos_pliromis;
    } 
    
    int get_arithmos_apodixis()
    {
        return arithmos_apodixis;
    }
    
    int get_codep()//Μέθδος που επιστρέφει τον κωδικό πελάτη που κάνει την πληρωμή
    {
        return codep;
    }
    
    float get_poso_pliromis()
    {
        return poso_pliromis;
    }
    
    String get_hmerominia_pliromis()
    {
        return hmerominia_pliromis.toString();
    }
    
    String get_tropos_pliromis()
    {
        return tropos_pliromis;
    }
    
    //Μέθοδος print() που εκτυπώνει όλα τα μέλη της κλάσης Eispraxi_apo_Pelati
    void print()
    {
        String res="ARITHMOS APODEIXHS: "+arithmos_apodixis+"\n";
        res+="POSO PLHROMHS: "+poso_pliromis+"\n";
        res+="HMEROMHNIA PLHROMHS:"+hmerominia_pliromis.toString()+"\n";
        res+="TROPOS PLHROMHS: "+tropos_pliromis+"\n";
        res+="KODIKOS PELATH: "+codep+"\n";
        
        JOptionPane.showMessageDialog(null, res,"APODEIXH PLHROMHS PELATH", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Eispraxi_apo_Pelati 
    //συνενωμένα σε ένα String
    public String toString()
    {
       String res="ARITHMOS APODEIXHS: "+arithmos_apodixis+"\n";
        res+="POSO PLHROMHS: "+poso_pliromis+"\n";
        res+="HMEROMHNIA PLHROMHS:"+hmerominia_pliromis.toString()+"\n";
        res+="TROPOS PLHROMHS: "+tropos_pliromis+"\n";
        res+="KODIKOS PELATH: "+codep+"\n";
        
        return res;
    }
}

 

Pliromi_se_Promitheyti.java

package part5;
import java.util.Date;
import javax.swing.JOptionPane;

//H Κλάση αυτή περιγράφει μια πληρωμή σε προμηθευτή
public class Pliromi_se_Promitheyti 
{
    //δήλωση ιδιωτικών μελών κλάσης Pliromi_se_Promitheyti
    private int arithmos_apodixis;
    private float poso_pliromis;
    private Date hmerominia_pliromis=new Date();
    private String tropos_pliromis;
    private String AFM; //ΑΦΜ Προμηθευτή στον οποίο γίνετυαι η πληρωμή
    
     //Δημιουργός κλάσης Pliromi_se_Promitheyti για αρχικοποίηση των ιδιωτικών μελών της
    Pliromi_se_Promitheyti(int arithmos_apodixis,float poso_pliromis,Date hmeromin-ia_pliromis,String tropos_pliromis,String AFM)
    {
        this.arithmos_apodixis=arithmos_apodixis;
        this.poso_pliromis=poso_pliromis;
        this.hmerominia_pliromis=hmerominia_pliromis;
        this.tropos_pliromis=tropos_pliromis;
        this.AFM=AFM;
    }
    
    void set_AFM(String AFM)//Μέθoδος που τροποποιεί το ΑΦΜ του προμηθευτή στον οποίο γίνεται η πληρωμή
    {
        this.AFM=AFM;
    }
    
    void set_arithmos_apodixis(int arithmos_apodixis)
    {
         this.arithmos_apodixis=arithmos_apodixis;
    }
    
    void set_poso_pliromis(float poso_pliromis)
    {
         this.poso_pliromis=poso_pliromis;
    }
    
    void set_hmerominia_pliromis(Date hmerominia_pliromis)
    {
         this.hmerominia_pliromis=hmerominia_pliromis;
    }
     
    void set_tropos_pliromis(String tropos_pliromis)
    {
         this.tropos_pliromis=tropos_pliromis;
    } 
    
    int get_arithmos_apodixis()
    {
        return arithmos_apodixis;
    }
    
    String get_AFM()//Μέθδος που επιστρέφει το ΑΦΜ του προμηθευτή στον οποίο γίνεται η πληρωμή
    {
        return AFM;
    }
    
    float get_poso_pliromis()
    {
        return poso_pliromis;
    }
    
    String get_hmerominia_pliromis()
    {
        return hmerominia_pliromis.toString();
    }
    
    String get_tropos_pliromis()
    {
        return tropos_pliromis;
    }
    
    //Μέθοδος print() που εκτυπώνει όλα τα μέλη της κλάσης Pliromi_se_Promitheyti
    void print()
    {
        String res="ARITHMOS APODEIXHS: "+arithmos_apodixis+"\n";
        res+="POSO PLHROMHS: "+poso_pliromis+"\n";
        res+="HMEROMHNIA PLHROMHS:"+hmerominia_pliromis.toString()+"\n";
        res+="TROPOS PLHROMHS: "+tropos_pliromis+"\n";
        res+="AFM PROMHTEYTH: "+AFM+"\n";
        
        JOptionPane.showMessageDialog(null, res,"APODEIXH PLHROMHS PROMITH-EYTH", JOptionPane.PLAIN_MESSAGE);
    }
    
     //Μέθοδος toString() που επιστρέφει όλα τα μέλη της κλάσης Pliromi_se_Promitheyti 
    //συνενωμένα σε ένα String
    public String toString()
    {
        String res="ARITHMOS APODEIXHS: "+arithmos_apodixis+"\n";
        res+="POSO PLHROMHS: "+poso_pliromis+"\n";
        res+="HMEROMHNIA PLHROMHS:"+hmerominia_pliromis.toString()+"\n";
        res+="TROPOS PLHROMHS: "+tropos_pliromis+"\n";
        res+="AFM PROMHTEYTH: "+AFM+"\n";
        
        return res;
    }
}
 
Staistika.java

package part5;

import javax.swing.JOptionPane;

public class Statistika 
{   
    static void ypologismos_statistikon()
    {
        int answer=Integer.parseInt(JOptionPane.showInputDialog("Επιλέξετε Είδος Στατιστικού:\n1.Στατιστικά Χονδρικών Πωλήσεων\n2.Στατιστικά Λιανικών Πωλήσεων\n3.Στατιστικά Αγορών"));
       
        if (answer==1)
            statistika_xondrikon_poliseon();
        else
             if (answer==2)
                statistika_lianikon_poliseon();
             else
                  if (answer==3)
                        statistika_agoron();
    }
    
    static void statistika_xondrikon_poliseon()
    {
        statistika_xondrikon_poliseon_synoliko_plithos_timologion_polisis();
        statistika_xondrikon_poliseon_mesi_axia_timologion_polisis();
        statistika_xondrikon_poliseon_synoliki_axia_timologion_polisis();   
    }
    
    static void statistika_lianikon_poliseon()
    {
        statistika_lianikon_poliseon_synoliko_plithos_apodeixeon_polisis();
        statistika_lianikon_poliseon_mesi_axia_apodeixeon_polisis();
        statistika_lianikon_poliseon_synoliki_axia_apodeixeon_polisis(); 
    }
     
    static void statistika_agoron()
    {
       statistika_agoron_synoliki_plithos_timologion_agoras();
       statistika_agoron_mesi_axia_timologion_agoras();
       statistika_agoron_synoliki_axia_timologion_agoras();
    }
    
    /////////////////////////////////
     static void statistika_agoron_mesi_axia_timologion_agoras()
     {
        System.out.println("Συνολική Αξία Παραστατικών Αγοράς ="+Parastatiko_Agoras.get_axiaagores());
     }
     
     static void statistika_agoron_synoliki_axia_timologion_agoras()
     {
         System.out.println("Μέση Αξία Παραστατικών Αγοράς ="+Parastatiko_Agoras.get_axiaagores()/Parastatiko_Agoras.get_agores());
     }
     
     static void statistika_agoron_synoliki_plithos_timologion_agoras()
     {
         System.out.println("Πλήθος Παραστατικών Αγοράς ="+Parastatiko_Agoras.get_agores());
     }
     //////////////////////////////////////////////
     
     
     //********************************************************************
    static void statistika_xondrikon_poliseon_synoliko_plithos_timologion_polisis()
    {
        System.out.println("Πλήθος Παραστατικών Χονδρικής Πώλησης="+Parastatiko_Xondrikis_Polisis.get_xondrikes());
    }
    
     static void  statistika_xondrikon_poliseon_mesi_axia_timologion_polisis()
     {
        System.out.println("Μέση αξία Παραστατικών Χονδρικής Πώλησης="+Parastatiko_Xondrikis_Polisis.get_axiaxondrikes()/Parastatiko_Xondrikis_Polisis.get_xondrikes());
     }
     
     static void statistika_xondrikon_poliseon_synoliki_axia_timologion_polisis()
     {
        System.out.println("Συνολική Αξία Παραστατικών Χονδρικής Πώλησης="+Parastatiko_Xondrikis_Polisis.get_axiaxondrikes());
     }
     //********************************************************************
     
     
    //----------------------------------------------------------------------
    static void statistika_lianikon_poliseon_synoliko_plithos_apodeixeon_polisis()
    {
        System.out.println("Πλήθος Παραστατικών Λιανικής Πώλησης="+Parastatiko_Lianikis_Polisis.get_lianikes());
    }
    
     static void  statistika_lianikon_poliseon_mesi_axia_apodeixeon_polisis()
     {
         System.out.println("Μέση αξία Παραστατικών Λιανικής Πώλησης="+Parastatiko_Lianikis_Polisis.get_axialianikes()/Parastatiko_Lianikis_Polisis.get_lianikes());
     }
     
     static void statistika_lianikon_poliseon_synoliki_axia_apodeixeon_polisis()
     {
         System.out.println("Συνολική Αξία Παραστατικών Λιανικής Πώλησης="+Parastatiko_Lianikis_Polisis.get_axialianikes());
     }
}
 

Part5.java
package part5;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Date;
import java.util.*;
import java.text.*;
import javax.swing.JOptionPane;
import static part5.PelatisOperations.check_duplicate_ADT;

public class Part5 
{
    static Pelatis p,q;
    static Pelatis_Xondrikis_Etaireia px;
    static Pelatis_Lianikis_Idiotis pl;
    static Promitheytis pro,qro;
    
    public static void main(String[] args) 
    {
            Menu();
            
            Etairia_Sidirou_Beton company=new Etairia_Sidirou_Beton();//Στιγμιότυπο Εταιρείας ΣΙδήρου Μπετόν
            company.print();
            
            //Δηλώνουμε το στιγμιότυπο p τύπου Pelatis που αντιπροσωπεύει ένα πελάτη με
            //Όνομα Nikos, Επώνυμο Mathaiou, Τηλέφωνο 2610299100, Πόλη Patra της εται-ρείας Σιδήρου-Μπετόν με ΑΦΜ 0999999999
            p=new Pelatis(1,"Nikos","Mathaiou","2610299100","Patra","082105296");
            
            //Δηλώνουμε το στιγμιότυπο q τύπου Pelatis που αντιπροσωπεύει ένα πελάτη με
            //Όνομα Anna, Επώνυμο Bagena, Τηλέφωνο 26107779100, Πόλη Patra της εταιρείας Σιδήρου-Μπετόν με ΑΦΜ 0999999999
            q=new Pelatis(2,"Anna","Bagena","26107779100","Patra","082105296");
          
            //Δηλώνουμε το στιγμιότυπο px τύπου Pelatis_Xondrikis_Etaireia που αντιπροσω-πεύει ένα πελάτη Χονδρικής με
            //Όνομα Nikos, Επώνυμο Mathaiou, Τηλέφωνο 2610299100, Πόλη Patra, ΑΦΜ 0999999999, Επωνυμια ELPE και Υπεύθυνο Nikolaou
            px=new Pela-tis_Xondrikis_Etaireia(1,"Nikos","Mathaiou","2610299100","Patra","0999999999","ELPE","Nikolaou","082105296");
            px.print();

            //Δηλώνουμε το στιγμιότυπο pl τύπου Pelatis_Lianikis_Idiotis που αντιπροσωπεύει ένα πελάτη Λιανικής με
            //Όνομα Anna, Επώνυμο Bagena, Τηλέφωνο 26107779100, Πόλη Patra, ΑΔΤ AE123456
            pl=new Pela-tis_Lianikis_Idiotis(2,"Anna","Bagena","26107779100","Patra","AE123456","082105296");
            pl.print();
            
            //Δηλώνουμε το στιγμιότυπο pro τύπου Promitheytis που αντιπροσωπεύει ένα Προ-μηθευτή της Εταιρείας Σιδήρου-Μπετόν με
            //Επωνυμία EISAGOGIKH AE, Τηλέφωνο 2310456789, Πόλη THESSALONIKH, ΑΦΜ 022222222 και αρχικόυπόλοιπο σε αυτόν 500€
            pro=new Promitheytis("022222222","EISAGOGIKH AE","THESSALONIKH","2310456789","EISAG@HOTMAIL.COM",500);
            pro.print();
            
             //Δηλώνουμε το στιγμιότυπο qro τύπου Promitheytis που αντιπροσωπεύει ένα Προ-μηθευτή της Εταιρείας Σιδήρου-Μπετόν με
            //Επωνυμία EMPORIKH OE, Τηλέφωνο 261065432, Πόλη PATRA, ΑΦΜ 055555555 και αρχικό υπόλοιπο σε αυτόν 400€
            qro=new Promitheytis("055555555","EMPORIKH OE","PATRA","261065432`","EMPORIKH@GMAIL.COM",400);
            qro.print();
          
            SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd");
            Date d=new Date();  

            String input="2019-10-11";
            Date t=null;

            try 
            {
              t = ft.parse(input); 
              System.out.println(t); 
             } 
             catch (ParseException e) 
             { 
               System.out.println("Unparseable using " + ft); 
             } 

             //Eidos(int kodikos_eidous,String proeleysi,String kataskeyastis,String mona-da_metrisis,float timi_polisis,String AFM_Etaireias)
             Eidos e=new Eidos(200,"ELLADA","XALYBOYRGIA THESSALI-AS","TEMAXIO",8,"022222222");
            
            //Δηλώνουμε 3 στιγμιότυπα των κλάσεων Domiko_Plegma, Mandyas και Sidi-ros_Beton αντίστοιχα

             //Δηλώνουμε το στιγμιότυπο dom της κλάσης Domiko_Plegma με κωδικο 200, Προέλευση ELLADA, Κατασκευαστή XALYBOYRGIA THESSALIAS, μονάδα μέτρη-σης ΤΕΜΑΧΙΟ, Τιμή Αγοράς 8€, Διάσταση ΚΑΝΟΝΙΚΗ από τον προμηθευτή με ΑΦΜ 022222222 
             Domiko_Plegma dom=new Domiko_Plegma(200,"ELLADA","XALYBOYRGIA THESSALIAS","TEMAXIO",8,"KANONIKH","022222222");
            
             //Δηλώνουμε το στιγμιότυπο man της κλάσης Mandyas με κωδικο 300, Προέλευση ELLADA, Κατασκευαστή XALYBOYRGIA THESSALIAS, Μήκος 1.2 και Πλάτος 1.5, Τιμή Αγοράς 3€, Υλικό Κατασκευής ATSALI από τον προμηθευτή με ΑΦΜ 022222222 
             Mandyas man=new Mandyas(300,"ELLADA","XALYBOYRGIA THESSALI-AS","TEMAXIO",1.2f,1.5f,3,"ATSALI","022222222");
            
             //Δηλώνουμε το στιγμιότυπο sid της κλάσης  Sidiros_Beton με κωδικο 400, Προέ-λευση ELLADA, Κατασκευαστή XALYBOYRGIA ATHINAS, Μονάδα Μέτρησης ΤΟNOS, Τιμή Αγοράς 20€, Ποσοστό κέρδους 10% από τον προμηθευτή με ΑΦΜ 022222222 
             Sidiros_Beton sid=new Sidiros_Beton(400,"ELLADA","XALYBOYRGIA ATHINAS","TONOS",20,10f,"022222222");
             
             //Δηλώνουμετο στιμγιότυπο eidh_agoras στο οποίο θα καταχωρηθούν τα είδη αγο-ράς (Τιμολόγιο Αγοράς)
             ArrayList<Eidos> eidh_agoras=new  ArrayList<Eidos> ();
             eidh_agoras.add(dom);//Προστίθεται το είδος dom στο ArrayList eidh_agoras
             eidh_agoras.add(man);//Προστίθεται το είδος man στο ArrayList eidh_agoras
             eidh_agoras.add(sid);//Προστίθεται το είδος sid στο ArrayList eidh_agoras
             
             //Δηλώνουμε το στιγμιότυπο posotites_agoras στο οποίο θα καταχωρηθούν οι ποσό-τητες αγοράς των ειδών ενός τιμολογίου αγοράς
             ArrayList <Integer> posotites_agoras=new ArrayList<Integer> ();
             posotites_agoras.add(50);//Για το είδος dom προστίθεται η τιμή 50 (τεμάχια) στο Ar-rayList posotites_agoras
             posotites_agoras.add(70);//Για το είδος man προστίθεται η τιμή 70 (τεμάχια) στο Ar-rayList posotites_agoras
             posotites_agoras.add(100);//Για το είδος sid προστίθεται η τιμή 100 (τόνοι) στο Ar-rayList posotites_agoras
          
             
             ///Δηλώνουμε το στιγμιότυπο paragor  που αντιπροσωπεύει ένα τιμολογιο αγοράς από τον προμηθευτή με ΑΦΜ 022222222
             //Ποσοστό ΦΠΑ 36%, Τρόπο Παραλαβής APOSTOLH PROMHTHEYTH ME NTALIKA και ημερομηνία έκδοσης που βρίσκεται στη μεταβλητή t
             Parastatiko_Agoras paragor=new Para-statiko_Agoras(23,"022222222",t,0.36f,"APOSTOLH PROMHTHEYTH ME NTALIKA");
             paragor.add_eidh_posotites(eidh_agoras,posotites_agoras);//τα 2 ArrayList eidh_agoras και posotites_agoras καταχωρούνται στα αντίστοιχα ArrayList του στιγμιοτύπου paragor
             paragor.ypologismos_axias_timologiou();//Υπολίζεται η καθαρή και η συνολική αξία του τιμολογίου Αγοράς
             paragor.print();//Εμφανίζονται όλα τα στοιχεία του τιμιλογίου αγοράς (μαζί με τις αξίες του)

             //Δηλώνουμε το στιμγιότυπο eidh_polhshs στο οποίο θα καταχωρηθούν όλα τα είδη ενός τιμολογίου Χονδρικής (Τιμολόγιο Πώλησης)      
             ArrayList<Eidos> eidh_polhshs=new  ArrayList<Eidos> ();
             eidh_polhshs.add(dom);//Προστίθεται το είδος dom στο ArrayList eidh_polhshs.
             eidh_polhshs.add(man);//Προστίθεται το είδος man στο ArrayList eidh_polhshs.
             eidh_polhshs.add(sid);//Προστίθεται το είδος sid στο ArrayList eidh_polhshs.
             
             //Δηλώνουμε το στιγμιότυπο posotites_polisis στο οποίο θα καταχωρηθούν οι ποσό-τητες πώλησης των ειδών ενός τιμολογίου Χονδρικής Πώλησης
             ArrayList <Integer> posotites_polisis=new ArrayList<Integer> ();
             posotites_polisis.add(10);//Για το είδος dom προστίθεται η τιμή 10 (τεμάχια) στο Ar-rayList posotites_polisis
             posotites_polisis.add(15);//Για το είδος man προστίθεται η τιμή 15 (τεμάχια) στο Ar-rayList posotites_polisis
             posotites_polisis.add(20);//Για το είδος sid προστίθεται η τιμή 20 (τόνοι) στο Ar-rayList posotites_polisis
          
             //Δηλώνουμε το στιγμιότυπο pxp τύπου Parastatiko_Xondrikis_Polisis που εκδίδεται στον πελάτη Χονδρικής με ΑΦΜ 0999999999
             //με αριθμό τιμολογίου 29, Ποσοστό ΦΠΑ 18% και Τρόπο Αποστολής Paralabh Pelath και ημερομηνία έκδοσης που βρίσκεται στη μεταβλητή d
             Parastatiko_Xondrikis_Polisis pxp=new Para-statiko_Xondrikis_Polisis(29,"0999999999",d,0.18f,"Paralabh Pelath");        
             pxp.add_eidh_posotites(eidh_polhshs,posotites_polisis);//τα 2 ArrayList eidh_polhshs και posotites_polisis καταχωρούνται στα αντίστοιχα ArrayList του στιγμιοτύπου pxp
             pxp.ypologismos_axion_timologiou();//Υπολίζεται η καθαρή και η συνολική αξία του τιμολογίου
             pxp.print();

            
             //Δηλώνουμε 3 στιγμιότυπα των κλάσεων Domiko_Plegma, Mandyas και Sidi-ros_Beton αντίστοιχα
             //Δηλώνουμε το στιγμιότυπο dom2 της κλάσης Domiko_Plegma με κωδικο 210, Προέλευση ELLADA, Κατασκευαστή XALYBOYRGIA BOLOU, μονάδα μέτρησης ΤΕ-ΜΑΧΙΟ, Τιμή Αγοράς 6€, Διάσταση EKTETAMENH από τον προμηθευτή με ΑΦΜ 022222222 
             Domiko_Plegma dom2=new Domiko_Plegma(210,"ELLADA","XALYBOYRGIA BOLOU","TEMAXIO",6,"EKTETAMENH","022222222");
             
            //Δηλώνουμε το στιγμιότυπο man2 της κλάσης Mandyas με κωδικο 310, Προέλευση ELLADA, Κατασκευαστή XALYBOYRGIA BOLOU, Μήκος 2.2 και Πλάτος 2.5, Τιμή Αγοράς 6€, Υλικό Κατασκευής XALYBAS από τον προμηθευτή με ΑΦΜ 022222222 
             Mandyas man2=new Mandyas(310,"ELLADA","XALYBOYRGIA BO-LOU","TEMAXIO",2.2f,2.5f,6,"ΧΑΛΥΒΑΣ","022222222");
             
            //Δηλώνουμε το στιγμιότυπο sid2 της κλάσης  Sidiros_Beton με κωδικο 410, Προέ-λευση ELLADA, Κατασκευαστή XALYBOYRGIA ATHINAS, Μονάδα Μέτρησης ΤΟNOS, Τιμή Αγοράς 10€, Ποσοστό Κέρδους 20% από τον προμηθευτή με ΑΦΜ 022222222 
             Sidiros_Beton sid2=new Sidiros_Beton(410,"ELLADA","XALYBOYRGIA ATHINAS","TONOS",10,0.20f,"022222222");
           
             ArrayList<Eidos> eidh_polhshs2=new  ArrayList<Eidos> ();//δημιουργούμε ένα ArrayList με τα είδη πώλησης για παραστατικό λιανικής (Απόδειξη Λιανικής Πώλησης)
             
             //δημιουργούμε 3 στιγμιότυπα τύπου Integer που αντιπροσωπεύουν τις ποσότητες πώλησης
             Integer a=new Integer(8);
             Integer b=new Integer(11);
             Integer c=new Integer(22);
             
             //Δηλώνουμε το στιγμιότυπο plp τύπου Parastatiko_Lianikis_Polisis που εκδίδεται στον πελάτη Λιανικής με ΑΔΤ AE123456
             //με αριθμό Απόδειξης 67, συνολική αξία 380€ και ημερομηνία έκδοσης που βρί-σκεται στη μεταβλητή d
             Parastatiko_Lianikis_Polisis plp=new Para-statiko_Lianikis_Polisis(67,"AE123456",d,380);
             
             //καλώντας τη μέθοδο add_eidos προσθέτουμε τα 3 είδη με τις ποσότητςς τους στa ArralyList eidi_apodixis και posotita_eidous_apodixis του στιγμιοτύπου plp
             plp.add_eidos(dom2,a);
             plp.add_eidos(man2,b);
             plp.add_eidos(sid2,c);
             
             plp.ypologismos_axias_apodixis();
             plp.print();
             
             //Δηλώνουμε το στιγμιότυπο eis1 τύπου Eispraxi_apo_Pelati που εκδίδεται στον πε-λάτη με Κωδικό 1
             //με αριθμό απόδειξης 14, συνολική αξία 240€ και Τρόπο πληρωμής cash και ημε-ρομηνία έκδοσης που βρίσκεται στη μεταβλητή d
             Eispraxi_apo_Pelati eis1=new Eispraxi_apo_Pelati(14,240,d,"cash",1);//Στιγμιότυπο Είσπραξης από Πελάτη Χονδρική
             eis1.print();

             //Δηλώνουμε το στιγμιότυπο eis2 τύπου Eispraxi_apo_Pelati που εκδίδεται στον πε-λάτη με Κωδικό 1
             //με αριθμό απόδειξης 15, συνολική αξία 240€ και Τρόπο πληρωμής card και ημε-ρομηνία έκδοσης που βρίσκεται στη μεταβλητή d
             Eispraxi_apo_Pelati eis2=new Eispraxi_apo_Pelati(15,200,d,"card",1);
             eis2.print();

            //Δηλώνουμε το στιγμιότυπο plr τύπου Pliromi_se_Promitheyti που εκδίδεται από τον προμηθευτή με ΑΦΜ 022222222
            //με αριθμό απόδειξης 35, συνολική αξία 100€ και Τρόπο πληρωμής Cash και ημε-ρομηνία έκδοσης που βρίσκεται στη μεταβλητή t
            Pliromi_se_Promitheyti plr=new Pliro-mi_se_Promitheyti(35,100,t,"cash","022222222");      
         
    }
    
    static void Menu()
    {
        String info="Μενού Πρόγράμματος\n1.Καταχώριση Πελάτη Χονδρικής\n2.Καταχώριση Πελάτη Λιανικής\n3.Τροποποίηση Πελάτη Χονδρικής\n4.Τροποποίηση Πελάτη Λιανικής\n5.Διαγραφή Πελάτη Χονδρικής\n6.Διαγραφή Πελάτη Λιανικής \n7.Καταχώριση Προμηθευτή\n8.Τροποποίηση Προμηθευτή\n9.Διαγραφή Προμηθευτή\n10.Καταχώριση Είδους\n11.Τροποποίηση Είδους\n12.Διαγραφή Είδους\n13.καταχώριση Παραγγελίας\n14.Ενημέρωση Πελατών με μεγάλο υπόλοιπο\n15.Ενηλικίωση Υπολοίπου Πελατών\n16.Στατιστικά\n17.Τερματισμός Προγράμματος\n";
        int res=Integer.parseInt(JOptionPane.showInputDialog(info));
        
        Scanner sc=new Scanner(System.in);
        
        switch(res)
        {
           case 1: katax_pel_xond();
                    break;
                    
           case 2: katax_pel_lian();
                    break;
                    
           case 3:  trop_pel_xond();
                    break;  
                    
           case 4: trop_pel_lian();
                  break;
                  
           case 5: diag_pel_xond();
                   break;  
                    
           case 6: diag_pel_lian();
                  break;  
                  
           case 7: katax_prom();
                    break;
                    
           case 8: trop_prom();
                    break;
                    
           case 9: diag_prom();
                   break; 
                   
          case 10: katax_eidous();
                    break;
                    
           case 11: trop_eidous();
                    break;
                    
           case 12: diag_eidous();
                   break;
                   
           case 13: katax_parag();
                   break;
                   
          case 14: find_pelat();
                   break;
                   
         case 15: enilik_ypol();
                   break;
                   
         case 16: Statistika.ypologismos_statistikon();
                  return;
                  
         case 17: return;      
        }
    }
    
    static void statistika()
    {
        
    }
    
    static void enilik_ypol()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesLianikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis) objIs.readObject();
            Date d=new Date();
            
            if (d.after(enter_orio_hmerom()))
                send_email(emp.get_onoma());
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
       
        InputStream fileIs2 = null;
        ObjectInputStream objIs2 = null;
        Pelatis emp2=null;
    
        try 
        {
            fileIs2 = new FileInputStream("PelatesXondrikisFile.txt");
            objIs2 = new ObjectInputStream(fileIs);
            Date d=new Date();
            
            if (d.after(enter_orio_hmerom()))
                send_email(emp.get_onoma());
     
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
       
        finally 
        {
            try 
            {
                if(objIs2 != null) 
                    objIs2.close();
            }
            catch (Exception ex) {}
        } 
    }
    
    static Date enter_orio_hmerom()
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Δώσε Ημερομηνία γαι ενηλικίωση υπολοίπου πελατών");
        String orio=sc.next();
        Date d=new Date();
        return d;
    }
    
    
    static void find_pelat()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesLianikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis) objIs.readObject();
            
            if (emp.get_balance()>=enter_orio_pelaton())
                send_email(emp.get_onoma());
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
        
        
        InputStream fileIs2 = null;
        ObjectInputStream objIs2 = null;
        Pelatis emp2=null;
    
        try 
        {
            fileIs2 = new FileInputStream("PelatesXondrikisFile.txt");
            objIs2 = new ObjectInputStream(fileIs);
            emp2 = (Pelatis) objIs.readObject();
          
            if (emp2.get_balance()>=enter_orio_pelaton())
               send_email(emp2.get_onoma());
     
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs2 != null) 
                    objIs2.close();
            }
            catch (Exception ex) {}
        } 
    }
    
    static void send_email(String onom)
    {
       System.out.println("O πελάτης με όνομα "+onom+" έχει υπόλοιπο πάνω από το όριο και πρέπει να ειδοποιηθεί");
      
    }
    
    static float enter_orio_pelaton()
    {
        Scanner sc=new Scanner(System.in);
         System.out.println("Δώσε όριο υπολοίπου πελατών");
        float orio=sc.nextFloat();
        return orio;
    }
    ////////////////////////////////////////
    static void katax_parag()
    {  
        Scanner sc=new Scanner(System.in);
        Paraggelia parag=new Paraggelia();
        
        System.out.println("Δώσε 1 για παραγγελία σιδήρρου και 2 για παραγγελία δομικού πλέγματος");
        int type=sc.nextInt();
        
        int orio=enter_orio();

        if (type==1)
        {
            if (Domiko_Plegma.ypoloipo_Domiko_Plegma>=orio)
                System.out.println("To Δομικό Πλέγμα εχει επαρκές υπόλοιπο. Δεν χρειάζεται παραγγελία");
            else
                parag.addEidos(1);
        }
        else
        {
            if (Sidiros_Beton.ypoloipo_Sidiros_Beton>=orio)
                System.out.println("Ο Σϊδηρος-Μπετόν εχει επαρκές υπόλοιπο. Δεν χρειάζεται παραγγελία");
            else
                parag.addEidos(2);
        }
    }
    
    static int enter_orio()
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Δώσε όριο παραγγελίας");
        int orio=sc.nextInt();
        return orio;
    }
    
    static void check_orio(int type,int orio)
    {
        if (type==1)
        {
            if (Domiko_Plegma.ypoloipo_Domiko_Plegma>=orio)
                System.out.println("To Δομικό Πλέγμα εχει επαρκές υπόλοιπο. Δεν χρειάζεται παραγγελία");
            else
            {
                Paraggelia parag=new Paraggelia();
                parag.addEidos(1);
            }
        }
        else
        {
             if (Sidiros_Beton.ypoloipo_Sidiros_Beton>=orio)
                System.out.println("Ο Σϊδηρος-Μπετόν εχει επαρκές υπόλοιπο. Δεν χρειάζεται πα-ραγγελία");
            else
             {
                Paraggelia parag=new Paraggelia();
                parag.addEidos(2);
             }
        }
    }
    
   
    static void katax_pel_xond()
    {  
        Scanner sc=new Scanner(System.in);
        System.out.println("Δώσε νέο όνο-μα,επώνυμο,τηλέφωνο,πόλη,επωνυμία,ΑΦΜ,υπεύθυνο,κωδικό");
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
        String eponymia=sc.next();
        String ypey=sc.next();
        int code=sc.nextInt();
        
        String afm=enter_afm();
        check_duplicate_AFM(afm); 
       
        enter_rest();
        
        Pelatis pl=new Pela-tis_Xondrikis_Etaireia(code,on,epon,thl,city,afm,eponymia,ypey,"084102395");
        pl.print(); 
        
        storePelatisXondrikis(pl);
     }
    
     static void katax_pel_lian()
     {  
        Scanner sc=new Scanner(System.in);
       
        System.out.println("Δώσε νέο κωδικό,όνομα,επώνυμο,τηλέφωνο,πόλη,ΑΔΤ");
        int code=sc.nextInt();
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
       
        String adt=enter_adt();
        enter_rest_lian();
 
        Pelatis pl=new Pelatis_Lianikis_Idiotis(code,on,epon,thl,city,adt,"082105296");
        pl.print();
       
        check_duplicate_ADT(adt);      
        storePelatisLianikis(pl);
     }
     
     static void katax_prom()
     {  
        Scanner sc=new Scanner(System.in);
     
        System.out.println("Δώσε ΑΦΜ, επωνυμία,έδρα,τηλέφωνο,email,αρχικό υπόλοιπο");
     
        enter_rest();
        
        String epon=sc.next();
        String edra=sc.next();
        String thl=sc.next();
        String email=sc.next();
        float bal=sc.nextFloat();
       
        String afm=enter_afm();
        check_duplicate_AFM(afm); 
        
        Promitheytis prom=new Promitheytis(afm,epon,edra,thl,email,bal);
    
        storePromitheytis(prom);
     }
     
      static void katax_eidous()
     {  
        Scanner sc=new Scanner(System.in);
     
        System.out.println("Δώσε Κωδικό Είδους,προέλευση,κατασκευαστή,μονάδα μέτρη-σης,τιμή αγοράς");
        enter_rest_eidous();
        
        String proe=sc.next();
        String kat=sc.next();
        String mon=sc.next();
        String diast=sc.next();
        float timi=sc.nextFloat();
        int code=enter_code();
        
        check_duplicate_code(code); 
        
       
        Domiko_Plegma dom=new Domi-ko_Plegma(code,proe,kat,mon,timi,diast,"022222222");
    
        storeEidos(dom);
     }
      /////////////////////////////////////////
     
      
      
     ////////////////////////////////////////////////
     static void trop_pel_xond()
     {  
        String afm=enter_afm();
        boolean res=find_AFM(afm);
        
        if (res==true)
            print_mess_found_afm();
        else
        {
            print_mess_not_found_afm();
            return;
        }
        
        Scanner sc=new Scanner(System.in);
        
        change_fields();
        
        System.out.println("Δώσε νέο κωδικό,όνομα, επώνυμο,τηλέφωνο,πόλη,επωνυμία,υπεύθυνο");
        int code=sc.nextInt();
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
        String eponymia=sc.next();
        String ypey=sc.next();
        
       
        Pelatis pl=new Pela-tis_Xondrikis_Etaireia(code,on,epon,thl,city,afm,eponymia,ypey,"084102395");
        pl.print();     
        storePelatisXondrikis(pl);
     }
     
     static void trop_pel_lian()
     {  
        String adt=enter_adt();
        boolean res=find_ADT(adt);
           
        if (res==true)
            print_mess_found_adt();
        else
        {
            print_mess_not_found_adt();
            return;
        }
        
        Scanner sc=new Scanner(System.in);
        
        change_fields();
          
        System.out.println("Δώσε νέο κωδικό,όνομα, επώνυμο,τηλέφωνο,πόλη,ΑΔΤ");
        int cod=sc.nextInt();
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
       
        check_duplicate_ADT(adt); 
        
        Pelatis pl=new Pelatis_Lianikis_Idiotis(cod,on,epon,thl,city,adt,"082105296");
        pl.print();    
        
        storePelatisLianikis(pl);
     }
     
     static void trop_prom()
     {  
        String afm=enter_afm();
        boolean res=find_AFM(afm);
        
        if (res==true)
            print_mess_found_afm();
        else
        {
            print_mess_not_found_afm();
            return;
        }
        
        Scanner sc=new Scanner(System.in);
        
        change_fields();
        
        System.out.println("Δώσε ΑΦΜ, επωνυμία,έδρα,τηλέφωνο,email,αρχικό υπόλοιπο");
        int code=sc.nextInt();
       
        String epon=sc.next();
        String thl=sc.next();
        String edra=sc.next();
        String email=sc.next();
        float bal=sc.nextFloat();
        
        Promitheytis prom=new Promitheytis(afm,epon,edra,thl,email,bal);
        prom.print();
            
        storePromitheytis(prom);
     }
     
      static void trop_eidous()
     {  
        int code=enter_code();
        boolean res=find_code(code);
        
        if (res==true)
            print_mess_found_code();
        else
        {
            print_mess_not_found_code();
            return;
        }
        
        Scanner sc=new Scanner(System.in);
        
        change_fields();
        
        System.out.println("Δώσε Κωδικό Είδους,προέλευση,κατασκευαστή,μονάδα μέτρη-σης,τιμή αγοράς");
     
        enter_rest();
        
        String proe=sc.next();
        String kat=sc.next();
        String mon=sc.next();
        String diast=sc.next();
        float timi=sc.nextFloat();
        
        check_duplicate_code(code); 
        
       
        Domiko_Plegma dom=new Domi-ko_Plegma(code,proe,kat,mon,timi,diast,"022222222");
    
        storeEidos(dom);
     
     }
     //////////////////////////////////////////////
      
      
    ///////////////////////////////////////////////  
    static void diag_pel_xond()
    { 
        String afm=enter_afm();
        find_AFM(afm);
        delete_pelatis_xond(afm);
        
    }
                           
    static void diag_pel_lian()
    { 
        String adt=enter_adt();
        find_ADT(adt);
        delete_pelatis_lian(adt);
    }
    
    static void diag_prom()
    { 
        String adt=enter_adt();
        find_ADT(adt);
        delete_promitheytis(adt);
    }
    
    static void diag_eidous()
    { 
        int code=enter_code();
        find_code(code);
        delete_eidos(code);
    }
    
    /////////////////////////////////////////////
    
    
    //////////////////////////////////////////
    static void storePelatisXondrikis(Pelatis emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("PelatesXondrikisFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
         
    }
    
    static void storePelatisLianikis(Pelatis emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("PelatesLianikisFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
         
     }
    
    static void storeEidos(Domiko_Plegma dom)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("EidhFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(dom);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        }
    }
    /////////////////////////////////////
    
    
    
    
    ////////////////////////////////////
    static void displayPelatisXondrikis()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesXondrikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
      
    static void displayPelatisLianikis()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesLianikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    static void displayPromitheytis()
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Promitheytis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PromitheytesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Promitheytis) objIs.readObject();
            System.out.println(emp);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
    
    /////////////////////////////////////////
    static void delete_pelatis_xond(String afm)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis_Xondrikis_Etaireia emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesXondrikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis_Xondrikis_Etaireia) objIs.readObject();
            
            if (emp.get_AFM()==afm)
            {
                 FileOutputStream ops = new FileOutputStream("PelatesXondrikisFile.txt");
                 ObjectOutputStream objOps = new ObjectOutputStream(ops);
                 emp=null;
                 objOps.writeObject(emp);
            }
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    
     static void delete_pelatis_lian(String adt)
     {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Pelatis_Lianikis_Idiotis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PelatesLianikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Pelatis_Lianikis_Idiotis) objIs.readObject();
            
            if (emp.get_ADT()==adt)
            {
                 FileOutputStream ops = new FileOutputStream("PelatesLianikisFile.txt");
                 ObjectOutputStream objOps = new ObjectOutputStream(ops);
                 emp=null;
                 objOps.writeObject(emp);
            }
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    static void delete_promitheytis(String afm)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Promitheytis emp=null;
    
        try 
        {
            fileIs = new FileInputStream("PromitheytesFile.txt");
            objIs = new ObjectInputStream(fileIs);
            emp = (Promitheytis) objIs.readObject();
            
            if (emp.get_AFM()==afm)
            {
                 FileOutputStream ops = new FileOutputStream("PromitheytesFile.txt");
                 ObjectOutputStream objOps = new ObjectOutputStream(ops);
                 emp=null;
                 objOps.writeObject(emp);
            }
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
  
  
     static void delete_eidos(int code)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
        Domiko_Plegma dom=null;
    
        try 
        {
            fileIs = new FileInputStream("EidhFile.txt");
            objIs = new ObjectInputStream(fileIs);
            dom = (Domiko_Plegma) objIs.readObject();
            
            if (dom.get_kodikos_eidous()==code)
            {
                 FileOutputStream ops = new FileOutputStream("EidhFile.txt");
                 ObjectOutputStream objOps = new ObjectOutputStream(ops);
                 dom=null;
                 objOps.writeObject(dom);
            }
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     ///////////////////////////////
  
    //////////////////////////
    static void storePromitheytis(Promitheytis emp)
    {  
        OutputStream ops = null;
        
        ObjectOutputStream objOps = null;
        try 
        {
            ops = new FileOutputStream("PromitheytesFile.txt");
            objOps = new ObjectOutputStream(ops);
           
            objOps.writeObject(emp);
           
            objOps.flush();
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                if(objOps != null) 
                    objOps.close();
            } 
            catch (Exception ex){}
        } 
    }
     
    static void check_duplicate_AFM(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PelatesXondrikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Pelatis_Xondrikis_Etaireia emp = (Pelatis_Xondrikis_Etaireia) objIs.readObject();
            
            do
            {
                if (emp.get_AFM()==a)
                {
                     print_mess_not_unique_afm();
                     a=enter_afm();
                }
                else
                {
                     print_mess_unique_afm();
                     return;
                }
            }
            while (emp.get_AFM()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    static void print_mess_not_unique_afm()
    {
        System.out.println("AFM is not unique");
    }
    
    static void print_mess_unique_afm()
    {
        System.out.println("AFM is unique");
    }
    
    static boolean find_AFM(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PelatesXondrikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Pelatis_Xondrikis_Etaireia emp = (Pelatis_Xondrikis_Etaireia) objIs.readObject();
          
            if (emp.get_AFM()==a)
                     return true;
            
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
                else
                    return false;
            }
            catch (Exception ex) {}
        }
        return false;
    }
    
    static boolean find_ADT(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PelatesLianikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Pelatis_Lianikis_Idiotis emp = (Pelatis_Lianikis_Idiotis) objIs.readObject();
          
            if (emp.get_ADT()==a)
                     return true;
            
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
                else
                    return false;
            }
            catch (Exception ex) {}
        }
        return false;
    }
    
    static boolean find_code(int a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("EidhFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Domiko_Plegma dom = (Domiko_Plegma) objIs.readObject();
          
            if (dom.get_kodikos_eidous()==a)
                     return true;
            
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
                else
                    return false;
            }
            catch (Exception ex) {}
        }
        return false;
    }
    
    static String enter_afm()
    {
        Scanner sc=new Scanner(System.in);
        String a=sc.next();
        return a;
    }
    
    static String enter_adt()
    {
        Scanner sc=new Scanner(System.in);
        String a=sc.next();
        return a;
    }
    
    static int enter_code()
    {
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        return a;
    }
    
    static String enter_rest()
    {
        Scanner sc=new Scanner(System.in);
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
        String eponymia=sc.next();
        String ypey=sc.next();
        int code=sc.nextInt();
        
        return on+epon+thl+city+eponymia+ypey+code;
    }
    
     
    static String enter_rest_lian()
    {
        Scanner sc=new Scanner(System.in);
       
        System.out.println("Δώσε νέο κωδικό,όνομα,επώνυμο,τηλέφωνο,πόλη,ΑΔΤ");
        int code=sc.nextInt();
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
        String adt=sc.next();
        
        return code+on+epon+thl+city+adt;
    }
    
    static String enter_rest_eidous()
    {
        Scanner sc=new Scanner(System.in);
      
        String proe=sc.next();
        String kat=sc.next();
        String mon=sc.next();
        String diast=sc.next();
        float timi=sc.nextFloat();
        int code=enter_code();
        
        return code+proe+kat+mon+diast+timi;
    }
    
     static void change_fields()
     {
        Scanner sc=new Scanner(System.in);
         
        System.out.println("Δώσε νέο κωδικό,όνομα, επώνυ-μο,τηλέφωνο,πόλη,επωνυμία,υπεύθυνο");
        int code=sc.nextInt();
        String on=sc.next();
        String epon=sc.next();
        String thl=sc.next();
        String city=sc.next();
        String eponymia=sc.next();
        String ypey=sc.next();
        
     }
    
    static void check_duplicate_ADT(String a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("PelatesLianikisFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Pelatis_Lianikis_Idiotis emp = (Pelatis_Lianikis_Idiotis) objIs.readObject();
            
            do
            {
                if (emp.get_ADT()==a)
                {
                     print_mess_not_unique_adt();
                     Scanner sc=new Scanner(System.in);
                     a=sc.next();
                }
                else
                {
                     print_mess_unique_adt();
                     return;
                }
            }
            while (emp.get_ADT()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
    
    static void print_mess_not_unique_adt()
    {
        System.out.println("ADT is not unique");
    }
    
    static void print_mess_unique_adt()
    {
        System.out.println("ADT is unique");
    }
     
     static void check_duplicate_code(int a)
    {
        InputStream fileIs = null;
        ObjectInputStream objIs = null;
       
        try 
        {
            fileIs = new FileInputStream("EidhFile.txt");
            objIs = new ObjectInputStream(fileIs);
            Domiko_Plegma dom = (Domiko_Plegma) objIs.readObject();
            
            do
            {
                if (dom.get_kodikos_eidous()==a)
                {
                     print_mess_not_unique_code();
                     Scanner sc=new Scanner(System.in);
                     a=sc.nextInt();
                }
                else
                {
                    print_mess_unique_code();
                    return;
                }
            }
            while (dom.get_kodikos_eidous()==a);
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        } 
        finally 
        {
            try 
            {
                if(objIs != null) 
                    objIs.close();
            }
            catch (Exception ex) {}
        }
    }
     
    static void print_mess_not_unique_code()
    {
        System.out.println("Code is not unique");
    }
    
    static void print_mess_unique_code()
    {
        System.out.println("Code is unique");
    } 
    
    static void print_mess_found_code()
    {
        System.out.println("Code found");
    }
    
    static void print_mess_not_found_code()
    {
        System.out.println("Code not found");
    } 
    
    static void print_mess_found_afm()
    {
        System.out.println("AFM found");
    }
    
    static void print_mess_not_found_afm()
    {
        System.out.println("AFM not found");
    } 
    
     static void print_mess_found_adt()
    {
        System.out.println("ADT found");
    }
    
    static void print_mess_not_found_adt()
    {
        System.out.println("ADT not found");
    } 
     
}

